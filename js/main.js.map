{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/js/classes/index.js",
    "src/js/main.js",
    "src/js/partial/buildThanks.js",
    "src/js/partial/checkForNext.js",
    "src/js/partial/createCartDom.js",
    "src/js/partial/cssVars.js",
    "src/js/partial/formListen.js",
    "src/js/partial/funcCollection.js",
    "src/js/partial/initForm.js",
    "src/js/partial/initialData.js",
    "src/js/partial/inputsData.js",
    "src/js/partial/regExpData.js",
    "src/js/partial/testRegExp.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AAEA;;;;;;;;;;;;;;;;AASA,OAAO,CAAC,GAAR;AAAA;AAAA;AACI;;;AAGA,kBAAc,QAAd,EAAyB;AAAA;;AACrB,QAAI,MAAM,CAAC,IAAP,CAAY,QAAZ,EAAsB,MAA1B,EAAkC;AAC9B,WAAK,IAAI,IAAT,IAAiB,QAAjB,EAA2B;AACvB,aAAK,IAAL,IAAa,QAAQ,CAAC,IAAD,CAArB;AACH;AACJ,KAJD,MAIO,MAAM,IAAI,KAAJ,CAAU,6BAA6B,QAAQ,CAAC,QAAT,EAAvC,CAAN;AACV;;AAVL;AAAA;AAAA,kCAYkB;AACV,aAAO,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAP;AACH;AAdL;AAAA;AAAA,iCAgBiB,IAhBjB,EAgBmC;AAAA,UAAZ,KAAY,uEAAN,IAAM;;AAC3B,UAAI,IAAI,IAAI,IAAZ,EAAkB;AACd,YAAK,CAAC,KAAN,EAAc;AACV,iBAAO,KAAK,IAAL,CAAP;AACH;;AAED,aAAK,IAAL,IAAa,KAAb;AACA,eAAO,KAAK,IAAL,CAAP;AACH,OAPD,MAOO,MAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;AACV;AAzBL;AAAA;AAAA,6BA2Ba;AACL,UAAI,GAAG,GAAG,IAAI,CAAC,KAAL,CAAY,KAAK,KAAL,GAAa,KAAK,QAAnB,GAA+B,GAA1C,IAAiD,GAA3D;AACA,aAAO,GAAG,CAAC,OAAJ,CAAY,CAAZ,CAAP;AACH;AA9BL;;AAAA;AAAA;AAiCA;;;;;AAGA,OAAO,CAAC,KAAR;AAAA;AAAA;AACI;;;;;AAKA,mBAAY,MAAZ,EAA2C;AAAA,QAAvB,GAAuB,uEAAnB,CAAmB;AAAA,QAAhB,YAAgB,uEAAH,CAAG;;AAAA;;AACvC,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,KAAL,GAAa,IAAb,CAFuC,CAEpB;;AACnB,SAAK,SAAL,GAAiB,IAAjB,CAHuC,CAGhB;;AACvB,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,QAAL,GAAgB,YAAhB;AACA,SAAK,SAAL,GAAiB,IAAI,IAAJ,EAAjB;AACH;AAED;;;;AAhBJ;AAAA;AAAA,qCAkBqB;AACb,UAAI,QAAQ,GAAG,CAAf;AACA,WAAK,MAAL,CAAY,OAAZ,CAAoB,UAAA,GAAG,EAAI;AACvB,QAAA,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAJ,EAAb;AACH,OAFD;;AAIA,UAAI,QAAJ,EAAc;AACV,eAAO,IAAI,CAAC,KAAL,CAAW,QAAQ,GAAG,GAAtB,IAA6B,GAApC;AACH,OAFD,MAGK;AACD,cAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN;AACH;AACJ;AAED;;;;;;AAhCJ;AAAA;AAAA,6BAqCa;AACL,UAAI,QAAQ,GAAG,KAAK,cAAL,EAAf;AACA,aAAO,IAAI,CAAC,KAAL,CAAa,QAAQ,GAAG,GAAZ,GAAmB,KAAK,GAAzB,GAAgC,GAA3C,IAAkD,GAAzD;AACH;AAED;;;;;;AA1CJ;AAAA;AAAA,kCA+CkB;AACV,UAAI,QAAQ,GAAG,KAAK,cAAL,EAAf;AACA,aAAO,IAAI,CAAC,KAAL,CAAa,QAAQ,GAAG,GAAZ,GAAmB,KAAK,QAAzB,GAAqC,GAAhD,IAAuD,GAA9D;AACH;AAED;;;;;;AApDJ;AAAA;AAAA,kCAyDkB;AACV,UAAI,QAAQ,GAAG,KAAK,cAAL,EAAf;AACA,UAAI,MAAM,GAAG,QAAQ,GAAG,KAAK,MAAL,EAAX,GAA2B,KAAK,WAAL,EAAxC;AACA,aAAO,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,GAApB,IAA2B,GAAlC;AACH;AAED;;;;;;;;AA/DJ;AAAA;AAAA,iCAsEiB,IAtEjB,EAsEmC;AAAA,UAAZ,KAAY,uEAAN,IAAM;;AAC3B,UAAI,IAAI,IAAI,IAAZ,EAAkB;AACd,YAAI,CAAC,KAAL,EAAY;AACR,iBAAO,KAAK,IAAL,CAAP;AACH;;AACD,aAAK,IAAL,IAAa,KAAb;AACA,eAAO,KAAK,IAAL,CAAP;AACH,OAND,MAMO;AACH,cAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;AACH;AACJ;AAhFL;;AAAA;AAAA;;;AC/CA;AAEA;;;;;;;;;;;;;;;;;AAYA,MAAM,CAAC,gBAAP,CAAwB,kBAAxB,EAA4C,YAAW;AACnD,MAAM,GAAG,GAAG,EAAZ;AACA,MAAM,YAAY,GAAG,EAArB;;AACA,MAAM,OAAO,GAAG,OAAO,CAAC,uBAAD,CAAvB;;AACA,MAAM,OAAO,GAAG,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAM,QAAQ,GAAG,OAAO,CAAC,oBAAD,CAAxB;AAEA;;;;;;;;;;AAQA,MAAM,IAAI,qBACC,OADD;AAEN,IAAA,KAAK,EAAE,EAFD;AAGN,IAAA,GAAG,EAAH,GAHM;AAIN,IAAA,YAAY,EAAZ,YAJM;AAKN,IAAA,KAAK,EAAE,CALD;AAMN,IAAA,SAAS,EAAE,OAAO,CAAC,SANb;AAON,IAAA,OAAO,EAAE,OAAO,CAAC,OAPX;AAQN,IAAA,IAAI,EAAE,OAAO,CAAC,0BAAD,CARP;AASN,IAAA,aAAa,EAAE,OAAO,CAAC,sBAAD,CAThB;AAUN,IAAA,SAAS,EAAE,OAAO,CAAC,sBAAD,CAVZ;AAWN,IAAA,WAAW,EAAE;AAXP,IAAV;AAcA;;;;;;AAIA,MAAI,IAAI,CAAC,IAAL,CAAU,cAAV,CAAyB,IAAI,CAAC,aAA9B,EAA6C,IAAI,CAAC,SAAlD,KACG,IAAI,CAAC,IAAL,CAAU,cAAV,CAAyB,IAAI,CAAC,WAA9B,EAA2C,IAAI,CAAC,OAAhD,CADH,IAEG,QAAQ,CAAC,KAAT,CAAe,IAAI,CAAC,QAApB,CAFP,EAEsC;AAElC,IAAA,IAAI,CAAC,IAAL,GAAY,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,QAA7B,CAAZ;AACA,IAAA,IAAI,CAAC,cAAL,GAAsB,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,YAA7B,CAAtB;AACA,IAAA,IAAI,CAAC,YAAL,GAAoB,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,gBAA7B,CAApB;AAEA,IAAA,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,IAAI,CAAC,aAA1B,CAAX,CAAlB;AAEA;;;;AAGA,QAAK,IAAI,CAAC,cAAV,EAA2B;AACvB,MAAA,IAAI,CAAC,cAAL,CAAoB,WAApB,GAAkC,IAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAAvD;AACH,KAFD,MAEO;AACH,YAAM,IAAI,KAAJ,iBAAmB,IAAI,CAAC,YAAxB,YAAN;AACH;AAED;;;;;;AAIA,QAAM,OAAO,GAAG,CACZ,QAAQ,CAAC,aAAT,YAA2B,IAAI,CAAC,WAAhC,EADY,EAEZ,QAAQ,CAAC,aAAT,YAA2B,IAAI,CAAC,YAAhC,EAFY,CAAhB;AAKA;;;;AAGA,IAAA,IAAI,CAAC,IAAL,CAAU,YAAV,CAAwB,OAAxB;AAEA;;;;AAGA,IAAA,QAAQ,CAAE,IAAF,CAAR;AAEH,GAtCD,MAsCO;AACH,UAAM,IAAI,KAAJ,CAAU,yDAAV,CAAN;AACH;AACJ,CA1ED,E,CA4EA;;AACA,SAAS,GAAT,CAAa,IAAb,EAAmB;AACf,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACH;;;AC7FD;AAEA;;;;;AAIA,MAAM,CAAC,OAAP,GAAiB,UAAE,IAAF,EAAY;AAAA,MACjB,IADiB,GACc,IADd,CACjB,IADiB;AAAA,MACX,KADW,GACc,IADd,CACX,KADW;AAAA,MACJ,MADI,GACc,IADd,CACJ,MADI;AAAA,MACI,KADJ,GACc,IADd,CACI,KADJ;AAEzB,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAT,YAA2B,IAAI,CAAC,YAAhC,EAAjB;AACA,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,YAA2B,IAAI,CAAC,MAAhC,EAAf;AACA,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,WAA7B,CAAxB;AACA,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,cAA7B,CAAvB;AACA,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,SAA7B,CAAtB;AACA,MAAM,UAAU,GAAG,MAAM,CAAC,aAAP,YAAyB,IAAI,CAAC,UAA9B,EAAnB;AAEA,EAAA,IAAI,CAAC,MAAL;AACA,EAAA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CAAuB,KAAvB,EAVyB,CAUM;;AAC/B,EAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB,EAXyB,CAWK;;AAE9B,EAAA,eAAe,CAAC,WAAhB,GAA8B,KAAK,CAAC,OAApC;AACA,EAAA,aAAa,CAAC,WAAd,GAA4B,KAAK,CAAC,SAAN,CAAgB,YAAhB,EAA5B;AACA,EAAA,cAAc,CAAC,WAAf,GAA6B,KAAK,CAAC,KAAN,CAAY,eAAZ,CAA7B;AAEA,EAAA,GAAG,CAAC,MAAD,CAAH;AAEA,EAAA,UAAU,CAAC,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACvC,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACH,GAFD;AAGH,CAtBD,C,CAwBA;;;AACA,SAAS,GAAT,CAAa,IAAb,EAAmB;AACf,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACH;;;ACjCD,a,CAEA;;AACA,IAAM,WAAW,GAAG,OAAO,CAAC,eAAD,CAA3B;AAEA;;;;;;;;;AAOA,MAAM,CAAC,OAAP,GAAiB,UAAE,IAAF,EAAY;AAAA,MACnB,KADmB,GACD,IADC,CACnB,KADmB;AAAA,MACZ,MADY,GACD,IADC,CACZ,MADY;AAEzB,MAAI,aAAa,GAAG,EAApB,CAFyB,CAED;AAE5B;;AACA,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAL,CAAkB,gBAAlB,CAAmC,2BAAnC,CAAjB;AACA,MAAM,YAAY,GAAG,IAAI,CAAC,IAAL,CAAU,gBAAV,YAA+B,IAAI,CAAC,SAApC,EAArB;AAEI,EAAA,IAAI,CAAC,IAAL,CAAU,YAAV,CAAuB,IAAvB,EARyB,CAQK;;AAC9B,EAAA,IAAI,CAAC,IAAL,CAAU,YAAV,CAAuB,IAAvB,EATyB,CASK;;AAE9B,OAAK,IAAI,IAAT,IAAiB,IAAI,CAAC,aAAtB,EAAqC;AACjC,QAAI,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,KAAzB,IAAkC,KAAlC,IACG,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,KAAzB,KAAmC,CAAC,CAD3C,EAC8C;AAAE;AAE5C,UAAI,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,IAAnB,CAAd;;AAEA,UAAI,OAAJ,EAAa;AAAE;AACX,YAAI,CAAC,OAAO,CAAC,KAAb,EAAoB;AAAE;AAClB,cAAI,OAAO,CAAC,IAAR,KAAiB,mBAAjB,CAAqC;AAArC,aACG,OAAO,CAAC,IAAR,KAAiB,iBADxB,EAC2C;AAEvC,gBAAI,WAAW,GAAG,IAAI,CAAC,IAAL,CAAU,aAAV,0BAA0C,OAAO,CAAC,IAAlD,OAAlB;AACA,gBAAI,kBAAkB,GAAG,WAAW,CAAC,aAArC;AAEA,YAAA,kBAAkB,CAAC,SAAnB,CAA6B,GAA7B,CAAiC,QAAjC,EALuC,CAKI;;AAC3C,YAAA,aAAa,CAAC,IAAd,CAAmB,kBAAkB,CAAC,aAAtC,EANuC,CAMe;AACzD,WARD,MASK;AACD,YAAA,OAAO,CAAC,SAAR,CAAkB,GAAlB,CAAsB,QAAtB;AACA,YAAA,aAAa,CAAC,IAAd,CAAmB,OAAO,CAAC,aAA3B;AACH;AACJ;AACJ,OAhBD,MAiBK,MAAM,IAAI,KAAJ,CAAU,0BAA0B,IAA1B,GAAiC,OAA3C,CAAN;AACR;AACJ;AAED;;;;;;;;AAMA,MAAI,aAAa,CAAC,MAAlB,EAA0B;AACtB,IAAA,IAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,aAAa,CAAC,CAAD,CAAnC,EAAwC,IAAxC;AACH,GAFD,MAGK;AACD,QAAI,KAAK,GAAG,QAAQ,CAAC,MAAT,GAAkB,CAA9B,EAAiC;AAC7B,MAAA,IAAI,CAAC,KAAL,GAAa,EAAE,KAAf;AACA,MAAA,IAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,KAAtB,EAA6B,CAAC,QAAD,EAAW,YAAX,CAA7B,EAAuD,MAAvD;AAEA,UAAM,UAAU,GAAG,IAAI,CAAC,IAAL,CAAU,aAAV,YAA4B,IAAI,CAAC,cAAjC,EAAnB;;AACA,UAAI,KAAK,KAAK,CAAd,EAAiB;AACb,QAAA,UAAU,CAAC,WAAX,GAAyB,cAAzB;AACH;AACJ,KARD,MASK;AACD;AACA,UAAM,OAAO,GAAG,eAAhB;AAEA,MAAA,IAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,SAAxB,EAAmC,OAAnC;AACA,MAAA,IAAI,CAAC,IAAL,CAAU,YAAV,CAAwB,IAAxB;AAEA,MAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ;AACJ,CAnED,C,CAqEA;;;AACA,SAAS,GAAT,CAAa,IAAb,EAAmB;AACf,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACH;;;ACpFD;AAEA;;;;;;AAKA,MAAM,CAAC,OAAP,GAAiB,UAAE,QAAF,EAAgB;AAAA,MACrB,KADqB,GACX,QADW,CACrB,KADqB;AAG7B,MAAI,aAAa,GAAG,QAAQ,CAAC,cAAT,CAAwB,QAAQ,CAAC,QAAjC,CAApB;AACA,MAAI,aAAa,GAAG,QAAQ,CAAC,aAAT,YAA2B,QAAQ,CAAC,aAApC,EAApB;AAEA,EAAA,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,UAAA,GAAG,EAAI;AACxB,QAAI,MAAM,GAAG,GAAG,CAAC,YAAJ,CAAiB,UAAjB,CAAb;AAAA,QACI,QAAQ,GAAG,GAAG,CAAC,YAAJ,CAAiB,UAAjB,CADf;AAAA,QAEI,OAAO,GAAG,GAAG,CAAC,MAAJ,EAFd;AAAA,QAGI,UAAU,GAAG,GAAG,CAAC,YAAJ,CAAiB,YAAjB,CAHjB;AAAA,QAII,QAAQ,GAAG,GAAG,CAAC,YAAJ,CAAiB,UAAjB,CAJf;AAMA,QAAI,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAX;AACA,IAAA,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,QAAQ,CAAC,QAA5B;AAEA,QAAI,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAjB;AACA,IAAA,UAAU,CAAC,YAAX,CAAwB,OAAxB,EAAiC,QAAQ,CAAC,cAA1C;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB;AAEA,QAAI,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAV;AACA,IAAA,GAAG,CAAC,YAAJ,CAAiB,KAAjB,EAAwB,MAAxB;AACA,IAAA,GAAG,CAAC,YAAJ,CAAiB,KAAjB,EAAwB,YAAxB;AACA,IAAA,UAAU,CAAC,WAAX,CAAuB,GAAvB;AAEA,QAAI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAf;AACA,IAAA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CAAuB,QAAQ,CAAC,YAAhC;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,QAAjB;AAEA,QAAI,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAnB;AACA,IAAA,YAAY,CAAC,YAAb,CAA0B,OAA1B,EAAmC,kBAAnC;AACA,IAAA,QAAQ,CAAC,WAAT,CAAqB,YAArB;AAEA,QAAI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAf;AACA,IAAA,QAAQ,CAAC,YAAT,CAAsB,WAAtB,EAAmC,UAAnC;AACA,IAAA,QAAQ,CAAC,WAAT,GAAuB,QAAvB;AACA,IAAA,YAAY,CAAC,WAAb,CAAyB,QAAzB;AAEA,QAAI,OAAO,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAd;AACA,IAAA,OAAO,CAAC,YAAR,CAAqB,WAArB,EAAkC,SAAlC;AACA,IAAA,OAAO,CAAC,WAAR,GAAsB,MAAM,OAA5B;AACA,IAAA,YAAY,CAAC,WAAb,CAAyB,OAAzB;AAEA,QAAI,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAnB;AACA,IAAA,YAAY,CAAC,SAAb,CAAuB,GAAvB,CAA2B,QAAQ,CAAC,YAApC;AACA,IAAA,QAAQ,CAAC,WAAT,CAAqB,YAArB;AAEA,QAAI,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAjB;AACA,IAAA,UAAU,CAAC,YAAX,CAAwB,WAAxB,EAAqC,YAArC;AACA,IAAA,UAAU,CAAC,WAAX,GAAyB,UAAzB;AACA,IAAA,YAAY,CAAC,WAAb,CAAyB,UAAzB;AAEA,QAAI,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAX;AACA,IAAA,IAAI,CAAC,WAAL,GAAmB,WAAnB;AACA,IAAA,YAAY,CAAC,WAAb,CAAyB,IAAzB;AAEA,QAAI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAf;AACA,IAAA,QAAQ,CAAC,YAAT,CAAsB,WAAtB,EAAmC,UAAnC;AACA,IAAA,QAAQ,CAAC,WAAT,GAAuB,QAAvB;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,QAAjB;AAEA,IAAA,aAAa,CAAC,WAAd,CAA0B,IAA1B;AACA,IAAA,aAAa,CAAC,WAAd,CAA0B,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAA1B;AACH,GAzDD;;AA2DA,MAAI,aAAJ,EAAmB;AACf,QAAI,OAAO,GAAG,aAAa,CAAC,gBAAd,CAA+B,MAA/B,CAAd;AACA,IAAA,OAAO,CAAC,OAAR,CAAgB,UAAA,IAAI,EAAI;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC,OAAL,CAAa,IAAxB;;AACA,UAAI,IAAJ,EAAU;AACN;;AAEA,YAAI,SAAQ,GAAG;AACX,sBAAY,oBAAM;AACd,YAAA,IAAI,CAAC,WAAL,GAAmB,MAAM,KAAK,CAAC,cAAN,GAAuB,OAAvB,CAA+B,CAA/B,CAAzB;AACH,WAHU;;AAIX;;AAEA,0BAAgB,wBAAM;AAClB,gBAAI,MAAM,GAAG,KAAK,CAAC,WAAN,EAAb;AACA,YAAA,IAAI,CAAC,WAAL,GAAmB,MAAM,GACnB,MAAM,MAAM,CAAC,OAAP,CAAe,CAAf,CADa,GAEnB,MAFN;AAGH,WAXU;AAYX,qBAAW,mBAAM;AACb,YAAA,IAAI,CAAC,WAAL,GAAmB,MAAM,KAAK,CAAC,MAAN,GAAe,OAAf,CAAuB,CAAvB,CAAzB;AACH,WAdU;AAeX,wBAAc,sBAAM;AAChB,YAAA,IAAI,CAAC,WAAL,GAAmB,MAAM,KAAK,CAAC,WAAN,GAAoB,OAApB,CAA4B,CAA5B,CAAzB;AACH;AAjBU,SAAf;;AAmBA,YAAI,IAAI,IAAI,SAAZ,EAAsB;AAClB,UAAA,SAAQ,CAAC,IAAD,CAAR;AACH;AACJ;AACJ,KA5BD;AA6BH,GA/BD,MA+BO;AACH,UAAM,IAAI,KAAJ,iBAAmB,QAAQ,CAAC,aAA5B,uBAAN;AACH;AACJ,CAnGD;;;ACPA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAM,CAAC,OAAP,GAAiB;AACb,EAAA,QAAQ,EAAE,YADG;AAEb,EAAA,aAAa,EAAE,QAFF;AAGb,EAAA,WAAW,EAAE,MAHA;AAIb,EAAA,WAAW,EAAE,aAJA;AAKb,EAAA,YAAY,EAAE,WALD;AAMb,EAAA,QAAQ,EAAE,WANG;AAOb,EAAA,YAAY,EAAE,YAPD;AAQb,EAAA,QAAQ,EAAE,WARG;AASb,EAAA,aAAa,EAAE,kBATF;AAUb,EAAA,gBAAgB,EAAE,uBAVL;AAWb,EAAA,QAAQ,EAAE,WAXG;AAYb,EAAA,cAAc,EAAE,uBAZH;AAab,EAAA,YAAY,EAAE,iBAbD;AAcb,EAAA,YAAY,EAAE,iBAdD;AAeb,EAAA,SAAS,EAAE,aAfE;AAgBb,EAAA,gBAAgB,EAAE,qBAhBL;AAiBb,EAAA,cAAc,EAAE,kBAjBH;AAkBb,EAAA,aAAa,EAAE,gBAlBF;AAmBb,EAAA,YAAY,EAAE,eAnBD;AAoBb,EAAA,MAAM,EAAE,QApBK;AAqBb,EAAA,MAAM,EAAE,QArBK;AAsBb,EAAA,KAAK,EAAE,OAtBM;AAuBb,EAAA,IAAI,EAAE,MAvBO;AAwBb,EAAA,GAAG,EAAE,KAxBQ;AAyBb,EAAA,MAAM,EAAE,gBAzBK;AA0Bb,EAAA,WAAW,EAAE,cA1BA;AA2Bb,EAAA,cAAc,EAAE,aA3BH;AA4Bb,EAAA,SAAS,EAAE,YA5BE;AA6Bb,EAAA,cAAc,EAAE,iBA7BH;AA8Bb,EAAA,UAAU,EAAE;AA9BC,CAAjB;;;AC7BA;AAEA;;;;;;AAKA,MAAM,CAAC,OAAP,GAAiB,UAAE,IAAF,EAAY;AACzB,MAAM,YAAY,GAAG,OAAO,CAAC,gBAAD,CAA5B;;AACA,MAAM,UAAU,GAAG,OAAO,CAAC,cAAD,CAA1B;;AAFyB,MAIrB,IAJqB,GAMrB,IANqB,CAIrB,IAJqB;AAAA,MAIf,MAJe,GAMrB,IANqB,CAIf,MAJe;AAAA,MAIP,IAJO,GAMrB,IANqB,CAIP,IAJO;AAAA,MAKrB,MALqB,GAMrB,IANqB,CAKrB,MALqB;AAAA,MAKb,GALa,GAMrB,IANqB,CAKb,GALa;AAAA,MAKR,QALQ,GAMrB,IANqB,CAKR,QALQ;AAQzB;;;;AAGA,EAAA,IAAI,CAAC,gBAAL,CAAsB,SAAtB,EAAiC,UAAC,EAAD,EAAQ;AACrC,QAAI,MAAM,GAAG,EAAE,CAAC,MAAhB;;AACA,QAAI,EAAE,CAAC,OAAH,KAAe,EAAf,IAAqB,EAAE,CAAC,OAAH,KAAe,EAAxC,EAA4C;AACxC,MAAA,MAAM,CAAC,IAAP;AACH;AACJ,GALD,EAKG,IALH;AAOA;;;;AAGA,EAAA,IAAI,CAAC,gBAAL,CAAsB,OAAtB,EAA+B,gBAAgB;AAAA,QAAb,MAAa,QAAb,MAAa;;AAC3C,QAAI,MAAM,CAAC,IAAP,KAAgB,mBAAhB,IAAuC,MAAM,CAAC,IAAP,KAAgB,iBAA3D,EAA8E;AAC1E,MAAA,YAAY,CAAC,MAAD,EAAS,MAAT,CAAZ;AACH;AACJ,GAJD,EAIG,IAJH;AAMA;;;;AAGA,EAAA,IAAI,CAAC,gBAAL,CAAsB,MAAtB,EAA8B,iBAAgB;AAAA,QAAb,MAAa,SAAb,MAAa;;AAC1C,QAAI,MAAM,CAAC,IAAP,KAAgB,mBAAhB,IAAuC,MAAM,CAAC,IAAP,KAAgB,iBAA3D,EAA8E;AAC1E,MAAA,YAAY,CAAC,MAAD,EAAS,MAAT,CAAZ;AACH;AACJ,GAJD,EAIG,IAJH,EA9ByB,CAoC7B;;AACI,EAAA,IAAI,CAAC,gBAAL,CAAsB,OAAtB,EAA+B,iBAAgB;AAAA,QAAb,MAAa,SAAb,MAAa;;AAC3C,QAAI,MAAM,CAAC,OAAP,CAAe,KAAf,EAAsB,OAAtB,CAA8B,IAA9B,KAAuC,UAA3C,EAAuD;AACnD;;;AAGA,MAAA,YAAY,CAAE,IAAF,CAAZ;AACH;AAED;;;;;;;AAKA,QAAI,MAAM,CAAC,OAAP,YAAmB,IAAI,CAAC,cAAxB,EAAJ,EAA+C;AAC3C,UAAI,WAAW,GAAG,MAAM,CAAC,OAAP,YAAmB,IAAI,CAAC,cAAxB,EAAlB,CAD2C,CACkB;;AAC7D,UAAI,WAAW,GAAG,WAAW,CAAC,aAAZ,CAA0B,aAA1B,CAAwC,OAAxC,CAAlB,CAF2C,CAEyB;;AACpE,UAAI,WAAW,GAAG,WAAW,CAAC,aAA9B,CAH2C,CAGE;;AAE7C,MAAA,WAAW,CAAC,KAAZ,GAAoB,EAApB,CAL2C,CAKnB;;AAExB,MAAA,aAAa,CAAC,WAAD,EAAc,IAAI,CAAC,OAAnB,CAAb,CAP2C,CAOD;;AAE1C,MAAA,WAAW,CAAC,SAAZ,CAAsB,GAAtB,CAA0B,MAA1B,EAT2C,CASR;;AACnC,MAAA,WAAW,CAAC,SAAZ,CAAsB,GAAtB,CAA0B,MAA1B,EAV2C,CAUR;;AACnC,MAAA,WAAW,CAAC,KAAZ;AACH;;AAED,QAAI,MAAM,CAAC,OAAP,CAAe,IAAf,KAAwB,QAA5B,EAAsC;AAClC,UAAI,YAAW,GAAG,MAAM,CAAC,aAAP,CAAqB,aAAvC;;AACA,UAAI,YAAW,GAAG,YAAW,CAAC,aAAZ,CAA0B,OAA1B,CAAlB,CAFkC,CAEoB;;;AACtD,UAAI,YAAW,GAAG,YAAW,CAAC,aAA9B;;AACA,UAAI,WAAW,GAAG,YAAW,CAAC,aAAZ,0BAA4C,YAAW,CAAC,IAAxD,EAAlB;;AAEA,MAAA,YAAW,CAAC,KAAZ,GAAoB,EAApB,CANkC,CAMV;;AACxB,MAAA,YAAW,CAAC,KAAZ,GAAoB,MAAM,CAAC,WAA3B;;AAEA,UAAI,YAAW,CAAC,KAAZ,CAAkB,MAAtB,EAA8B;AAC1B,QAAA,WAAW,CAAC,WAAZ,GAA0B,YAAW,CAAC,KAAtC;AACA,QAAA,WAAW,CAAC,SAAZ,CAAsB,GAAtB,CAA0B,IAA1B;AAEA;;;;;AAIA,QAAA,UAAU,CAAC,YAAM;AACb,UAAA,YAAW,CAAC,SAAZ,CAAsB,MAAtB,CAA6B,MAA7B;;AACA,UAAA,YAAW,CAAC,aAAZ,YAA8B,IAAI,CAAC,cAAnC,GAAqD,SAArD,CAA+D,MAA/D,CAAsE,MAAtE;AACH,SAHS,EAGP,GAHO,CAAV;AAIH;AACJ;AACJ,GAlDD,EArCyB,CAyF7B;;AACI,EAAA,IAAI,CAAC,gBAAL,CAAsB,OAAtB,EAA+B,iBAAgB;AAAA,QAAb,MAAa,SAAb,MAAa;AAC3C,QAAI,QAAQ,GAAG,IAAI,CAAC,aAAL,CAAmB,MAAM,CAAC,IAA1B,EAAgC,IAA/C;AAED;;;AAEA,IAAA,UAAU,CAAC,MAAD,EAAS,IAAT,CAAV;;AAEC,QAAI,QAAQ,KAAK,gBAAjB,EAAmC;AAC/B,UAAI,aAAa,CAAC,MAAM,CAAC,aAAR,EAAuB,MAAM,CAAC,KAA9B,EAAqC,IAArC,CAAjB,EAA6D;AAAE;AAC3D,QAAA,MAAM,CAAC,KAAP,CAAa,KAAb,GAAqB,EAArB;AACH,OAFD,MAGK;AACD,QAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,GAArB;AACH;AACJ;AACJ,GAfD,EAeG,IAfH,EA1FyB,CA2G7B;;AACI,EAAA,IAAI,CAAC,gBAAL,CAAsB,QAAtB,EAAgC,iBAAgB;AAAA,QAAb,MAAa,SAAb,MAAa;AAC5C,QAAI,QAAQ,GAAG,IAAI,CAAC,aAAL,CAAmB,MAAM,CAAC,IAA1B,EAAgC,IAA/C;AAEA,IAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAP,CAAa,IAAb,EAAf;;AAEA,QAAI,MAAM,CAAC,KAAP,CAAa,MAAjB,EAAyB;AACrB,UAAI,CAAC,IAAI,CAAC,SAAL,CAAe,QAAf,EAAyB,IAAzB,CAA8B,MAAM,CAAC,KAArC,CAAL,EAAkD;AAAE;AAChD,QAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,QAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,QAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,OAAtD;AACH,OAJD,MAKK;AAAG;AACJ,QAAA,IAAI,CAAC,IAAL,CAAU,YAAV,CAAuB,IAAvB;AACA,QAAA,MAAM,CAAC,SAAP,CAAiB,MAAjB,CAAwB,MAAxB;AAEA,YAAI,KAAK,GAAG;AACR,0BAAgB,wBAAY;AACxB,gBAAI,GAAG,GAAG,MAAM,CAAC,KAAjB;;AACA,gBAAI,GAAG,CAAC,KAAJ,CAAU,GAAV,EAAe,MAAf,KAA0B,CAA9B,EAAiC;AAAE;AAC/B,cAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,cAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,cAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,OAAtD;AACH;AACJ,WARO;AASR,iBAAO,eAAY;AACf,gBAAI,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,CAA1B,EAA6B;AACzB,cAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,cAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,cAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,OAAtD;AACH;AACJ,WAfO;AAgBR,mBAAS,iBAAY;AACjB,gBAAI,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,EAA1B,EAA8B;AAAE;AAC5B,cAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,cAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,cAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,OAAtD;AACH,aAJD,MAKK;AACD,cAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,IAA2B,GAA3B,GAAiC,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAnB,CAAhD;AACA,cAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,IAA2B,GAA3B,GAAiC,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAnB,CAAhD;AACH;AACJ,WA1BO;AA2BR,4BAAkB,0BAAY;AAC1B;AACA,gBAAI,WAAW,GAAG,IAAI,CAAC,IAAL,CAAU,aAAV,0BAA0C,MAAM,CAAC,IAAjD,EAAlB;AACA,gBAAI,WAAW,GAAG,MAAM,CAAC,aAAzB;AACA,gBAAI,cAAc,GAAG,WAAW,CAAC,aAAZ,CAA0B,aAA1B,YAA4C,IAAI,CAAC,cAAjD,EAArB;AACA,gBAAI,GAAG,GAAG,KAAV;;AAEA,gBAAI,IAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,MAAM,CAAC,KAA7B,CAAJ,EAAyC;AACrC,cAAA,GAAG,GAAG,IAAN;AACH;;AAED,gBAAI,CAAC,GAAL,EAAU;AACN,cAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,GAArB;AACA,cAAA,WAAW,CAAC,SAAZ,CAAsB,MAAtB,CAA6B,IAA7B;AACH,aAHD,MAIK;AACD,cAAA,WAAW,CAAC,WAAZ,GAA0B,MAAM,CAAC,KAAjC;AACA,cAAA,WAAW,CAAC,SAAZ,CAAsB,MAAtB,CAA6B,GAA7B;AACA,cAAA,WAAW,CAAC,SAAZ,CAAsB,GAAtB,CAA0B,IAA1B;AACA,cAAA,UAAU,CAAC,YAAM;AACb,gBAAA,WAAW,CAAC,SAAZ,CAAsB,MAAtB,CAA6B,MAA7B,EADa,CAC0B;;AACvC,gBAAA,cAAc,CAAC,SAAf,CAAyB,MAAzB,CAAgC,MAAhC,EAFa,CAE4B;AAC5C,eAHS,EAGP,GAHO,CAAV;AAIH;AACJ,WAnDO;AAoDR,wBAAc,sBAAY;AACtB,gBAAI,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,EAA1B,EAA8B;AAAE;AAC5B,cAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,cAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,cAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,OAAtD;AACH,aAJD,MAKK;AACD,kBAAI,IAAI,GAAG,MAAM,CAAC,KAAlB;AACA,cAAA,IAAI,GAAG,IAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;AACA,mBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,GAAmC;AAC/B,gBAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,CAAd,IAAmB,GAAnB,GAAyB,IAAI,CAAC,KAAL,CAAW,CAAX,CAAhC;AACA,gBAAA,CAAC,IAAI,CAAL;AACH;;AACD,cAAA,MAAM,CAAC,KAAP,GAAe,IAAf;AACA,cAAA,MAAM,CAAC,aAAP,CAAqB,SAArB,CAA+B,GAA/B,CAAmC,QAAnC,EARC,CAQ6C;AACjD;AACJ,WApEO;AAqER,sBAAY,oBAAY;AACpB,gBAAI,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,CAA1B,EAA6B;AAAE;AAC3B,cAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,cAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,cAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,OAAtD;AACH,aAJD,MAKK;AACD,kBAAI,CAAC,GAAG,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAR;AACA,kBAAI,CAAC,GAAG,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAC,CAApB,CAAR;AACA,kBAAI,OAAO,GAAG,IAAI,IAAJ,EAAd;AACA,kBAAI,OAAO,GAAG,OAAO,CAAC,WAAR,EAAd;AACA,kBAAI,eAAe,GAAG,OAAO,CAAC,QAAR,GAAmB,KAAnB,CAAyB,CAAC,CAA1B,CAAtB,CALC,CAKmD;;AACpD,kBAAI,OAAO,GAAG,IAAd,CANC,CAMmB;;AAEpB,kBAAI,CAAC,IAAI,eAAT,EAA0B;AACtB,oBAAI,CAAC,IAAI,CAAL,IAAU,CAAC,GAAG,EAAlB,EAAsB;AAAG;AACrB,kBAAA,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,YAAV,CAAuB,CAAvB,EAA0B,CAA1B,CAAV;;AACA,sBAAI,OAAO,GAAG,OAAd,EAAuB;AACnB,oBAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAnB,EAAqB,CAArB,IAA0B,KAA1B,GAAkC,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,CAAnB,CAAjD;AACH,mBAFD,MAGK;AACD,oBAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,oBAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,oBAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,sBAAtD;AACH;AACJ,iBAVD,MAWK;AACD,kBAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,kBAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,kBAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,mBAAgE,CAAhE;AACH;AACJ,eAjBD,MAkBK;AACD,gBAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,gBAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,gBAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,sBAAtD;AACH;AACJ;AACJ,WA3GO;AA4GR,mBAAS,iBAAY;AAAE;AACnB,gBAAI,MAAM,CAAC,KAAP,CAAa,OAAb,CAAqB,GAArB,IAA4B,CAA5B,IAAiC,MAAM,CAAC,KAAP,CAAa,OAAb,CAAqB,GAArB,IAA4B,CAAjE,EAAoE;AAChE,cAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,cAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,MAArB;AACA,cAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,MAAM,CAAC,aAAjC,EAAgD,IAAhD,EAAsD,OAAtD;AACH;AACJ;AAlHO,SAAZ;;AAoHA,YAAI,KAAK,CAAC,QAAD,CAAT,EAAqB;AACjB,UAAA,KAAK,CAAC,QAAD,CAAL;AACH;AACJ;AACJ;AACJ,GAxID,EA5GyB,CAuP7B;;AACI;;;;;AAIA,WAAS,YAAT,CAAuB,MAAvB,EAA+B,WAA/B,EAA6C;AACzC,IAAA,MAAM,CAAC,aAAP,CAAqB,SAArB,CAA+B,MAA/B,CAAsC,WAAtC;AACH;AAED;;;;;;;;AAMA,WAAS,aAAT,CAAuB,SAAvB,EAAkC,OAAlC,EAA2C;AACvC,QAAI,aAAa,GAAG,SAAS,CAAC,aAAV,YAA4B,IAAI,CAAC,aAAjC,EAApB;;AACA,QAAI,aAAJ,EAAmB;AACf,MAAA,aAAa,CAAC,aAAd,CAA4B,WAA5B,CAAwC,aAAxC,EADe,CACyC;AAC3D;;AACD,IAAA,aAAa,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAA,aAAa,CAAC,SAAd,CAAwB,GAAxB,CAA4B,IAAI,CAAC,aAAjC;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACrC,UAAI,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACA,MAAA,MAAM,CAAC,YAAP,CAAoB,WAApB,EAAiC,QAAjC;AACA,MAAA,MAAM,CAAC,WAAP,GAAqB,OAAO,CAAC,CAAD,CAA5B;AACA,MAAA,aAAa,CAAC,WAAd,CAA0B,MAA1B;AACH;;AACD,IAAA,SAAS,CAAC,YAAV,CAAuB,aAAvB,EAAsC,SAAS,CAAC,UAAhD;AACH;AACJ,CAtRD;AAwRI;;;;;;;AAKA,SAAS,aAAT,CAAuB,YAAvB,EAAqC,SAArC,EAAgD,IAAhD,EAAsD;AAClD,MAAI,QAAQ,GAAG,IAAI,CAAC,OAAL,CAAa,MAAb,CAAoB,UAAA,IAAI,EAAI;AACvC,WAAO,IAAI,CAAC,OAAL,CAAa,SAAb,MAA4B,CAAC,CAApC;AACH,GAFc,CAAf;;AAIA,MAAI,QAAQ,CAAC,MAAb,EAAqB;AACjB,IAAA,aAAa,CAAC,YAAD,EAAe,QAAf,EAAyB,IAAzB,CAAb;AACA,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;AAED;;;;;;;;AAMA,SAAS,aAAT,CAAuB,YAAvB,EAAqC,QAArC,EAA+C,IAA/C,EAAqD;AACjD,MAAI,aAAa,GAAG,YAAY,CAAC,aAAb,YAA+B,IAAI,CAAC,aAApC,EAApB;;AACA,MAAI,aAAJ,EAAmB;AACf,IAAA,aAAa,CAAC,aAAd,CAA4B,WAA5B,CAAwC,aAAxC,EADe,CACyC;AAC3D;;AACD,EAAA,aAAa,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAhB;AACA,EAAA,aAAa,CAAC,SAAd,CAAwB,GAAxB,CAA4B,IAAI,CAAC,aAAjC;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACtC,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACA,IAAA,MAAM,CAAC,YAAP,CAAoB,WAApB,EAAiC,QAAjC;AACA,IAAA,MAAM,CAAC,WAAP,GAAqB,QAAQ,CAAC,CAAD,CAA7B;AACA,IAAA,aAAa,CAAC,WAAd,CAA0B,MAA1B;AACH;;AACD,EAAA,YAAY,CAAC,YAAb,CAA0B,aAA1B,EAAyC,YAAY,CAAC,UAAtD;AACH,C,CAED;;;AACA,SAAS,GAAT,CAAa,IAAb,EAAmB;AACf,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACH;;;AC1UL,a,CAEA;;eACuB,OAAO,CAAC,YAAD,C;IAAtB,G,YAAA,G;IAAK,K,YAAA,K;AAEb;;;;;;;;;;;AASA,OAAO,CAAC,cAAR,GAAyB,UAAC,IAAD,EAAO,GAAP,EAAe;AACpC,MAAI,OAAO,GAAG,YAAY,CAAC,OAAb,CAAqB,IAArB,CAAd;AACA,MAAI,OAAJ;;AAEA,MAAK,OAAL,EAAe;AACX,IAAA,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,OAAX,CAAV;AACA,QAAM,YAAY,GAAG,IAAI,IAAJ,CAAS,OAAO,CAAC,YAAjB,CAArB;AACA,QAAM,WAAW,GAAG,IAAI,IAAJ,EAApB;;AAEA,QAAK,CAAC,WAAW,GAAG,YAAf,IAA6B,IAA7B,GAAkC,EAAlC,GAAqC,EAArC,GAAwC,EAAzC,GAA+C,CAAnD,EAAsD;AAClD,aAAO,IAAP;AACH;AACJ;;AAED,EAAA,eAAe,CAAC,IAAD,EAAO,GAAP,CAAf;AACA,SAAO,CAAC,CAAE,YAAY,CAAC,OAAb,CAAqB,IAArB,CAAV;AACH,CAhBD;AAkBA;;;;;AAGA,OAAO,CAAC,YAAR,GAAuB,UAAE,OAAF,EAAe;AAClC,MAAI,UAAU,GAAG,CAAjB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACrC,QAAI,OAAO,CAAC,CAAD,CAAP,CAAW,YAAX,IAA2B,UAA/B,EAA2C;AACvC,MAAA,UAAU,GAAG,OAAO,CAAC,CAAD,CAAP,CAAW,YAAxB;AACH;AACJ;;AACD,EAAA,OAAO,CAAC,OAAR,CAAgB,UAAA,GAAG;AAAA,WAAI,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,UAAU,GAAG,IAApC;AAAA,GAAnB;AACH,CARD;AAUA;;;;;;AAIA,OAAO,CAAC,SAAR,GAAoB,UAAE,SAAF,EAAiB;AACjC,SAAO,SAAS,CAAC,GAAV,CAAc,UAAA,GAAG;AAAA,WAAI,IAAI,GAAJ,CAAQ,GAAR,CAAJ;AAAA,GAAjB,CAAP;AACH,CAFD;AAIA;;;;;;;;AAMA,OAAO,CAAC,SAAR,GAAoB,UAAC,MAAD,EAAS,GAAT,EAAc,YAAd,EAA+B;AAC/C,SAAO,IAAI,KAAJ,CAAU,MAAV,EAAkB,GAAlB,EAAuB,YAAvB,CAAP;AACH,CAFD;AAIA;;;;;;;;;;;AASA,OAAO,CAAC,WAAR,GAAsB,YAAqC;AAAA,MAAnC,KAAmC,uEAA7B,CAA6B;AAAA,MAA1B,SAA0B;AAAA,MAAf,SAAe;;AACvD,MAAI,SAAS,CAAC,MAAd,EAAsB;AAClB,IAAA,SAAS,CAAC,OAAV,CAAkB,UAAA,QAAQ,EAAI;AAC1B,UAAI,QAAQ,CAAC,MAAb,EAAqB;AACjB,QAAA,aAAa,CAAE,QAAF,EAAY,SAAZ,CAAb;AACA,QAAA,QAAQ,CAAC,KAAD,CAAR,CAAgB,SAAhB,CAA0B,GAA1B,CAA8B,SAA9B;AACH,OAHD,MAGO;AACH,cAAM,IAAI,KAAJ,CAAU,uBAAV,CAAN;AACH;AACJ,KAPD;AAQH,GATD,MASO;AACH,UAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACH;AACJ,CAbD;AAeA;;;;;AAGA,OAAO,CAAC,YAAR,GAAuB,gBAA4B;AAAA,MAAzB,IAAyB,QAAzB,IAAyB;AAAA,MAAnB,YAAmB,QAAnB,YAAmB;AAC/C,MAAI,QAAQ,GAAG,IAAI,CAAC,gBAAL,YAA0B,YAA1B,EAAf;;AACA,MAAI,QAAQ,CAAC,MAAb,EAAqB;AACjB,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,KAAK,EAAI;AACtB,MAAA,KAAK,CAAC,aAAN,CAAoB,WAApB,CAAgC,KAAhC;AACH,KAFD;AAGH;AACJ,CAPD;AASA;;;;;AAGA,OAAO,CAAC,YAAR,GAAuB,UAAE,IAAF,EAAY;AAC/B,MAAI,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,gBAAV,YAA+B,IAAI,CAAC,MAApC,EAAb;;AACA,MAAI,MAAM,CAAC,MAAX,EAAmB;AACf,IAAA,MAAM,CAAC,OAAP,CAAe,UAAA,IAAI,EAAI;AACnB,MAAA,IAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,IAAI,CAAC,MAA3B;AACH,KAFD;AAGH;AACJ,CAPD;AASA;;;;;;;AAKA,OAAO,CAAC,WAAR,GAAsB,UAAE,SAAF,EAAa,IAAb,EAAqC;AAAA,MAAlB,IAAkB,uEAAb,OAAa;AACvD,MAAI,OAAO,GAAG,eAAd;AACA,MAAI,SAAJ;AACA,MAAI,OAAJ,CAHuD,CAGzC;;AACd,MAAI,MAAJ,CAJuD,CAI3C;;AAEZ;;;AAEA,MAAI,SAAS,CAAC,SAAV,CAAoB,QAApB,CAA6B,IAAI,CAAC,cAAlC,CAAJ,EAAuD;AAAG;AACtD,IAAA,MAAM,GAAG,SAAS,CAAC,aAAnB;AACA,IAAA,OAAO,GAAG,MAAM,CAAC,aAAP,CAAqB,OAArB,CAAV;AACA,IAAA,SAAS,GAAG,OAAO,CAAC,IAApB;AACH,GAJD,MAKK,IAAI,SAAS,CAAC,aAAV,CAAwB,OAAxB,CAAJ,EAAqC;AACtC,IAAA,OAAO,GAAG,SAAS,CAAC,aAAV,CAAwB,OAAxB,CAAV;AACA,IAAA,SAAS,GAAG,OAAO,CAAC,IAApB;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,SAAnB,EAA8B,KAA9B,CAAoC,UAApC,GAAiD,KAAjD;AACH,GAJI,MAKA,MAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;;AAEL,EAAA,OAAO,CAAC,KAAR;;AAEA,MAAI,IAAI,KAAK,OAAb,EAAsB;AAClB;AACA,IAAA,OAAO,IAAI,SAAS,CAAC,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,CAAX;AACA,IAAA,UAAU,CAAC,SAAD,EAAY,IAAI,CAAC,YAAjB,EAA+B,OAA/B,CAAV;AACH,GAJD,MAKK,IAAI,IAAI,KAAK,OAAb,EAAsB;AACvB,IAAA,OAAO,GAAG,UAAV;AACA,IAAA,OAAO,IAAI,IAAI,CAAC,aAAL,CAAmB,SAAnB,EAA8B,OAA9B,CAAX,CAFuB,CAE4B;;AACnD,IAAA,UAAU,CAAC,SAAD,EAAY,IAAI,CAAC,YAAjB,EAA+B,OAA/B,CAAV;AACH,GAJI,MAKA,UAAU,CAAC,SAAD,EAAY,IAAI,CAAC,YAAjB,EAA+B,IAA/B,CAAV,CAhCkD,CAgCF;;AACxD,CAjCD;AAmCA;;;;;;;;AAMA,OAAO,CAAC,eAAR,GAA0B,UAAC,YAAD,EAAe,IAAf,EAAsC;AAAA,MAAjB,IAAiB,uEAAZ,OAAY;AAC5D,EAAA,IAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,YAAtB,EAAoC,IAApC,EAA0C,IAA1C;AACA,EAAA,UAAU,CAAC,YAAM;AACb,IAAA,IAAI,CAAC,IAAL,CAAU,YAAV,CAAuB,IAAvB;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CALD;AAOA;;;;;;AAIA,OAAO,CAAC,YAAR,GAAuB,UAAE,IAAF,EAAY;AAC/B,EAAA,YAAY,CAAC,IAAD,CAAZ;AAD+B,MAGxB,WAHwB,GAGF,IAHE,CAGxB,WAHwB;AAAA,MAGX,KAHW,GAGF,IAHE,CAGX,KAHW;AAI/B,MAAM,WAAW,GAAG,WAAW,CAAE,WAAF,CAA/B;AACA,MAAI,MAAM,GAAG,SAAb;AAEA;;;;AAGA,MAAI,WAAW,CAAC,MAAhB,EAAwB;AACpB,UAAM,IAAI,KAAJ,+BAAiC,WAAW,CAAC,IAAZ,CAAiB,IAAjB,CAAjC,EAAN;AACH;AAED;;;;;;;;;AAOA,EAAA,WAAW,CAAC,WAAD,EAAc,MAAd,EAAsB,KAAtB,CAAX;AACH,CAtBD;AAwBA;;;;;;;AAKA,OAAO,CAAC,YAAR,GAAuB,UAAE,EAAF,EAAM,EAAN,EAAc;AACjC,MAAI,KAAK,GAAG,CAAC,EAAD,GAAM,CAAlB,CADiC,CACZ;;AACrB,MAAI,IAAI,GAAG,CAAC,EAAD,GAAM,IAAjB;AACA,SAAO,IAAI,IAAJ,CAAS,IAAT,EAAe,KAAf,CAAP;AACH,CAJD,C,CAMA;;AAEA;;;;;;AAIA,SAAS,aAAT,CAAwB,QAAxB,EAAkC,SAAlC,EAA8C;AAC1C,EAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,EAAE,EAAI;AACnB,IAAA,EAAE,CAAC,SAAH,CAAa,MAAb,CAAoB,SAApB;AACH,GAFD;AAGH;AAED;;;;;;;AAKA,SAAS,eAAT,CAAyB,IAAzB,EAA+B,IAA/B,EAAsC;AAElC,MAAI,YAAY,GAAG,EAAnB;;AACA,MAAI,IAAI,CAAC,MAAT,EAAiB;AACb,IAAA,YAAY,GAAG;AACX,MAAA,IAAI,EAAJ,IADW;AAEX,MAAA,YAAY,EAAE,IAAI,IAAJ;AAFH,KAAf;AAIA,IAAA,YAAY,CAAC,OAAb,CAAqB,IAArB,EAA2B,IAAI,CAAC,SAAL,CAAe,YAAf,CAA3B;AACH;AACJ;AAED;;;;;;;AAKA,SAAS,UAAT,CAAoB,MAApB,EAA4B,UAA5B,EAAwC,OAAxC,EAAiD;AAC7C,MAAI,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAX;AACA,EAAA,IAAI,CAAC,WAAL,GAAmB,OAAnB;AAEA,EAAA,MAAM,CAAC,YAAP,CAAoB,IAApB,EAA0B,MAAM,CAAC,UAAjC;AACA,EAAA,IAAI,CAAC,YAAL,CAAkB,OAAlB,EAA2B,UAA3B;AACH;AAED;;;;;;;AAKA,SAAS,WAAT,CAAuB,GAAvB,EAA6B;AACzB,MAAI,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAI,IAAT,IAAiB,GAAjB,EAAsB;AAClB,QAAI,CAAC,GAAG,CAAC,IAAD,CAAJ,IAAc,CAAC,IAAI,CAAC,KAAL,CAAW,UAAX,CAAnB,EAA4C;AAAE;AAC1C,MAAA,WAAW,CAAC,IAAZ,CAAkB,IAAlB;AACH;AACJ;;AACD,SAAO,WAAP;AACH;AAED;;;;;AAGA,SAAS,YAAT,CAAuB,IAAvB,EAA8B;AAAA,MAClB,aADkB,GACa,IADb,CAClB,aADkB;AAAA,MACH,WADG,GACa,IADb,CACH,WADG;;AAG1B,OAAK,IAAI,IAAT,IAAiB,aAAjB,EAAgC;AAC5B,QAAI,IAAI,KAAK,WAAb,EAA0B;AACtB,UAAI,UAAU,GAAG,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,IAAnB,EAAyB,KAA1C;AACA,UAAI,SAAS,GAAG,UAAU,CAAC,KAAX,CAAiB,CAAC,CAAlB,CAAhB;AACA,UAAI,UAAU,GAAG,UAAU,CAAC,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAjB;AACA,MAAA,WAAW,CAAC,IAAD,CAAX,GAAoB,IAAI,CAAC,IAAL,CAAU,YAAV,CAAuB,SAAvB,EAAkC,UAAlC,CAApB;AACH,KALD,MAMK;AACD,MAAA,WAAW,CAAC,IAAD,CAAX,GAAoB,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,IAAnB,EAAyB,KAA7C;AACH;AACJ;AACJ;AAED;;;;;;;;AAMA,SAAS,WAAT,CAAqB,GAArB,EAA0B,MAA1B,EAAkC,KAAlC,EAAyC;AACrC,MAAM,KAAK,GAAG,EAAd;AACA,MAAM,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAI,IAAT,IAAiB,GAAjB,EAAsB;AAClB,QAAI,IAAI,CAAC,KAAL,CAAW,MAAX,CAAJ,EAAwB;AACpB,MAAA,KAAK,CAAC,IAAD,CAAL,GAAc,GAAG,CAAC,IAAD,CAAjB;AACH,KAFD,MAEO;AACH,MAAA,SAAS,CAAC,IAAD,CAAT,GAAkB,GAAG,CAAC,IAAD,CAArB;AACH;AACJ;;AAED,EAAA,KAAK,CAAC,YAAN,CAAmB,OAAnB,EAA4B,KAA5B;AACA,EAAA,KAAK,CAAC,YAAN,CAAmB,WAAnB,EAAgC,SAAhC;AACH,C,CAED;;;AACA,SAAS,GAAT,CAAa,IAAb,EAAmB;AACf,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACH;;;AChTD;AAEA;;;;;;;;;;;;AAWA,MAAM,CAAC,OAAP,GAAiB,UAAE,IAAF,EAAY;AACzB;AACA,MAAM,aAAa,GAAG,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAM,UAAU,GAAG,OAAO,CAAC,cAAD,CAA1B,CAHyB,CAIzB;;;AAJyB,MAKnB,KALmB,GAKT,IALS,CAKnB,KALmB,EAOzB;;AACA,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAL,CAAkB,gBAAlB,CAAmC,2BAAnC,CAAjB,CARyB,CAUzB;;AACA,MAAM,YAAY,GAAG,IAAI,CAAC,IAAL,CAAU,gBAAV,YAA+B,IAAI,CAAC,SAApC,EAArB;AAEA,MAAM,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,IAAI,CAAC,SAAzB,CAAf;AAbyB,MAcjB,GAdiB,GAcK,IAdL,CAcjB,GAdiB;AAAA,MAcZ,YAdY,GAcK,IAdL,CAcZ,YAdY;;AAgBzB,MAAI,MAAM,CAAC,MAAX,EAAmB;AACf,IAAA,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,MAApB,EAA4B,GAA5B,EAAiC,YAAjC,CAAb;AACH;;AAED,MAAM,QAAQ,GAAG;AACb,IAAA,KAAK,EAAE,IAAI,CAAC,KADC;AAEb,IAAA,QAAQ,EAAE,IAAI,CAAC,QAFF;AAGb,IAAA,aAAa,EAAE,IAAI,CAAC,aAHP;AAIb,IAAA,QAAQ,EAAE,IAAI,CAAC,QAJF;AAKb,IAAA,cAAc,EAAE,IAAI,CAAC,cALR;AAMb,IAAA,YAAY,EAAE,IAAI,CAAC,YANN;AAOb,IAAA,YAAY,EAAE,IAAI,CAAC;AAPN,GAAjB,CApByB,CA8BzB;;AACA,EAAA,aAAa,CAAE,QAAF,CAAb;AAEA,EAAA,IAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,KAAtB,EAA6B,CAAC,QAAD,EAAW,YAAX,CAA7B,EAAuD,IAAI,CAAC,MAA5D;AAEA,EAAA,UAAU,CAAE,IAAF,CAAV;AACH,CApCD,C,CAsCA;;;AACA,SAAS,GAAT,CAAa,IAAb,EAAmB;AACf,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACH;;;ACtDD;;AAEA,OAAO,CAAC,SAAR,GAAoB,CAChB;AACI,EAAA,QAAQ,EAAE,kBADd;AAEI,EAAA,MAAM,EAAE,OAFZ;AAGI,EAAA,KAAK,EAAE,KAHX;AAII,EAAA,UAAU,EAAE,OAJhB;AAKI,EAAA,QAAQ,EAAE,CALd;AAMI,EAAA,QAAQ,EAAE;AANd,CADgB,EAShB;AACI,EAAA,QAAQ,EAAE,yBADd;AAEI,EAAA,MAAM,EAAE,OAFZ;AAGI,EAAA,KAAK,EAAE,IAHX;AAII,EAAA,UAAU,EAAE,+BAJhB;AAKI,EAAA,QAAQ,EAAE,CALd;AAMI,EAAA,QAAQ,EAAE;AANd,CATgB,EAiBhB;AACI,EAAA,QAAQ,EAAE,oBADd;AAEI,EAAA,MAAM,EAAE,OAFZ;AAGI,EAAA,KAAK,EAAE,IAHX;AAII,EAAA,UAAU,EAAE,+BAJhB;AAKI,EAAA,QAAQ,EAAE,CALd;AAMI,EAAA,QAAQ,EAAE;AANd,CAjBgB,CAApB;AA2BA,OAAO,CAAC,OAAR,GAAkB,CACd,SADc,EACH,QADG,EACO,QADP,EACiB,uBADjB,EAC0C,aAD1C,EAEd,kCAFc,EAEsB,OAFtB,EAE+B,YAF/B,EAE6C,uBAF7C,EAGd,cAHc,EAGE,SAHF,EAGa,QAHb,EAGuB,YAHvB,EAGqC,cAHrC,EAGqD,WAHrD,CAAlB;;;AC7BA;AAEA;;;;;;;;;;AASA,MAAM,CAAC,OAAP,GAAiB;AACb,yBAAuB;AAAC,IAAA,KAAK,EAAE,gBAAR;AAA0B,IAAA,IAAI,EAAE,cAAhC;AAAgD,IAAA,KAAK,EAAE;AAAvD,GADV;AAEb,4BAA0B;AAAC,IAAA,KAAK,EAAE,kBAAR;AAA4B,IAAA,IAAI,EAAE,OAAlC;AAA2C,IAAA,KAAK,EAAE;AAAlD,GAFb;AAGb,8BAA4B;AAAC,IAAA,KAAK,EAAE,UAAR;AAAoB,IAAA,IAAI,EAAE,QAA1B;AAAoC,IAAA,KAAK,EAAE;AAA3C,GAHf;AAIb,cAAY;AAAC,IAAA,KAAK,EAAE,mCAAR;AAA6C,IAAA,IAAI,EAAE,OAAnD;AAA4D,IAAA,KAAK,EAAE,CAAC;AAApE,GAJC;AAKb,oBAAkB;AAAC,IAAA,KAAK,EAAE,OAAR;AAAiB,IAAA,IAAI,EAAC,QAAtB;AAAgC,IAAA,KAAK,EAAE;AAAvC,GALL;AAMb,uBAAqB;AAAC,IAAA,KAAK,EAAE,QAAR;AAAkB,IAAA,IAAI,EAAE,gBAAxB;AAA0C,IAAA,KAAK,EAAE;AAAjD,GANR;AAOb,mBAAiB;AAAC,IAAA,KAAK,EAAE,QAAR;AAAkB,IAAA,IAAI,EAAE,KAAxB;AAA+B,IAAA,KAAK,EAAE;AAAtC,GAPJ;AAQb,uBAAqB;AAAC,IAAA,KAAK,EAAE,gBAAR;AAA0B,IAAA,IAAI,EAAE,cAAhC;AAAgD,IAAA,KAAK,EAAE;AAAvD,GARR;AASb,mBAAiB;AAAC,IAAA,KAAK,EAAE,mBAAR;AAA6B,IAAA,IAAI,EAAE,OAAnC;AAA4C,IAAA,KAAK,EAAE;AAAnD,GATJ;AAUb,4BAA0B;AAAC,IAAA,KAAK,EAAE,UAAR;AAAoB,IAAA,IAAI,EAAE,QAA1B;AAAoC,IAAA,KAAK,EAAE;AAA3C,GAVb;AAWb,sBAAoB;AAAC,IAAA,KAAK,EAAE,mCAAR;AAA6C,IAAA,IAAI,EAAE,OAAnD;AAA4D,IAAA,KAAK,EAAE,CAAC;AAApE,GAXP;AAYb,kBAAgB;AAAC,IAAA,KAAK,EAAE,OAAR;AAAiB,IAAA,IAAI,EAAE,QAAvB;AAAiC,IAAA,KAAK,EAAE;AAAxC,GAZH;AAab,qBAAmB;AAAC,IAAA,KAAK,EAAE,QAAR;AAAkB,IAAA,IAAI,EAAE,gBAAxB;AAA0C,IAAA,KAAK,EAAE;AAAjD,GAbN;AAcb,iBAAe;AAAC,IAAA,KAAK,EAAE,QAAR;AAAkB,IAAA,IAAI,EAAE,KAAxB;AAA+B,IAAA,KAAK,EAAE;AAAtC,GAdF;AAeb,eAAa;AAAC,IAAA,KAAK,EAAE,gBAAR;AAA0B,IAAA,IAAI,EAAE,cAAhC;AAAgD,IAAA,KAAK,EAAE;AAAvD,GAfA;AAgBb,iBAAe;AAAC,IAAA,KAAK,EAAE,qBAAR;AAA+B,IAAA,IAAI,EAAE,YAArC;AAAmD,IAAA,KAAK,EAAE;AAA1D,GAhBF;AAiBb,eAAa;AAAC,IAAA,KAAK,EAAE,YAAR;AAAsB,IAAA,IAAI,EAAE,UAA5B;AAAwC,IAAA,KAAK,EAAE;AAA/C,GAjBA;AAkBb,eAAa;AAAC,IAAA,KAAK,EAAE,MAAR;AAAgB,IAAA,IAAI,EAAE,UAAtB;AAAkC,IAAA,KAAK,EAAE;AAAzC;AAlBA,CAAjB;;;ACXA;AAEA;;;AAEA,MAAM,CAAC,OAAP,GAAiB;AACb,WAAS,2EADI;AAEb,YAAU,gBAFG;AAGb,oBAAkB,gDAHL;AAIb,kBAAgB,gCAJH;AAKb,WAAS,cALI;AAMb,SAAO,eANM;AAOb,WAAS,qDAPI;AAQb,gBAAc,sDARD;AAQyD;AACtE,cAAY,eATC;AASgB;AAC7B,cAAY;AAVC,CAAjB;;;ACJA;AAEA;;;;;;;;;;;;;AAYA,MAAM,CAAC,OAAP,GAAiB,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC9B,MAAI,QAAQ,GAAG,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,IAAzB,EAA+B,IAA9C;AACA,MAAI,MAAM,GAAG,IAAI,CAAC,SAAL,CAAe,QAAf,CAAb;;AAEA,MAAI,CAAC,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,KAAlB,CAAL,EAA+B;AAC3B,IAAA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,KAAK,CAAC,aAAhC,EAA+C,IAA/C,EAAqD,OAArD;AACA,IAAA,UAAU,CAAC,YAAM;AACb,MAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAoB,CAAC,CAArB,CAAd,CADa,CAC0B;AAC1C,KAFS,EAEP,GAFO,CAAV;AAGH,GALD,MAKO;AAAK;AACR,IAAA,YAAY,CAAC,KAAD,EAAQ,IAAR,CAAZ,CADG,CACwB;;AAE3B,QAAI,QAAQ,KAAK,QAAb,IACG,QAAQ,KAAK,cADhB,IAEG,QAAQ,KAAK,gBAFpB,EAEsC;AAClC,MAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,WAAf,KAA+B,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,WAArB,EAA7C;AACH;;AACD,QAAI,QAAQ,KAAK,cAAb,IAA+B,QAAQ,KAAK,gBAAhD,EAAkE;AAC9D,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAAlC,EAAqC;AAAG;AACpC,YAAI,QAAQ,GAAG,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,CAAf;;AACA,YAAM,KAAK,CAAC,KAAN,CAAY,MAAZ,GAAqB,CAAtB,GAA2B,QAA5B,IAAyC,CAA7C,EAAiD;AAAI;AACjD,cAAI,OAAO,GAAG,KAAK,CAAC,KAAN,CAAY,QAAQ,GAAC,CAArB,EAAwB,WAAxB,KAAwC,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,QAAQ,GAAG,CAA7B,EAAgC,WAAhC,EAAtD;AACA,UAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,QAAQ,GAAC,CAA9B,IAAmC,OAAjD,CAF6C,CAEa;AAC7D;AACJ;AACJ;;AACD,QAAI,QAAQ,KAAK,OAAjB,EAA0B;AACtB;AACA,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAAlC,EAAqC;AACjC,QAAA,KAAK,CAAC,KAAN,GAAc,MAAM,KAAK,CAAC,KAA1B;AACH,OAJqB,CAKtB;;;AACA,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,CAA9D,EAAiE;AAC7D,YAAI,QAAQ,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAC,CAAnB,CAAf;AACA,QAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,IAA2B,GAA3B,GAAiC,QAA/C;AACH,OATqB,CAUtB;;;AACA,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAApE,EAAuE;AACnE,QAAA,IAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,KAAK,CAAC,aAA5B,EAA2C,IAA3C,EAAiD,OAAjD;AACA,QAAA,UAAU,CAAC,YAAM;AACb,UAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAoB,CAAC,CAArB,CAAd,CADa,CAC0B;AAC1C,SAFS,EAEP,GAFO,CAAV;AAGH,OAhBqB,CAiBtB;;;AACA,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,CAA9D,EAAiE;AAC7D,YAAI,SAAQ,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAC,CAAnB,CAAf;;AACA,QAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,IAA2B,GAA3B,GAAiC,SAA/C;AACH,OArBqB,CAsBtB;;;AACA,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAApE,EAAuE;AACnE,QAAA,IAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,KAAK,CAAC,aAA5B,EAA2C,IAA3C,EAAiD,OAAjD;AACA,QAAA,UAAU,CAAC,YAAM;AACb,UAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAoB,CAAC,CAArB,CAAd,CADa,CAC0B;AAC1C,SAFS,EAEP,GAFO,CAAV;AAGH,OA5BqB,CA8BtB;;;AACA,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,EAA1D,IACA,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,MAAiC,CAAC,CAAlC,IAAuC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,EADlE,EACsE;AAClE,YAAI,UAAQ,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAC,CAAnB,CAAf;;AACA,QAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,IAA2B,GAA3B,GAAiC,UAA/C;AACH;;AACD,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,EAAhE,IACA,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,MAAiC,CAAC,CAAlC,IAAuC,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,MAAiC,EAD5E,EACgF;AAC5E,QAAA,IAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,KAAK,CAAC,aAA5B,EAA2C,IAA3C,EAAiD,OAAjD;AACA,QAAA,UAAU,CAAC,YAAM;AACb,UAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAoB,CAAC,CAArB,CAAd,CADa,CAC0B;AAC1C,SAFS,EAEP,GAFO,CAAV;AAGH;AACJ;;AACD,QAAI,QAAQ,KAAK,YAAjB,EAA+B;AAC3B,MAAA,KAAK,CAAC,aAAN,CAAoB,SAApB,CAA8B,MAA9B,CAAqC,WAArC,EAD2B,CACwB;;AAEnD,UAAI,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,CAA1D,IACA,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,EAAyB,CAAzB,MAAgC,CAAC,CAAjC,IAAsC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,EAD7D,IAEA,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,MAAiC,CAAC,CAAlC,IAAuC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,EAF9D,IAGA,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,MAAiC,CAAC,CAAlC,IAAuC,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,EAHlE,EAGsE;AAElE,YAAI,UAAQ,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAC,CAAnB,CAAf;;AACA,QAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,IAA2B,GAA3B,GAAiC,UAA/C;AACH;AACJ;AACJ;AACJ,CAnFD;AAqFA;;;;;;;AAKA,SAAS,YAAT,CAAsB,KAAtB,EAA6B,IAA7B,EAAmC;AAC/B,EAAA,IAAI,CAAC,IAAL,CAAU,YAAV,CAAuB,IAAvB;AACA,EAAA,KAAK,CAAC,KAAN,CAAY,UAAZ,GAAyB,EAAzB;AACA,EAAA,KAAK,CAAC,KAAN,CAAY,KAAZ,GAAoB,EAApB;AACH",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "'use strict';\r\n\r\n/**@description: creates a new product item from the given properties;\r\n * creates prototype methods on:\r\n * - getAllProps(): returns all properties except .prototype methods;\r\n * - initProperty({string} prop, {boolean} value -(optional)):\r\n * if 'arguments[value]' equals null, then it returns the 'prop' value,\r\n * else it changes the 'prop' value to 'arguments[value]' and returns new 'prop' value;\r\n * - getSum(): it calculates and returns the sum by multiplying the qnty and the\r\n * price of the product; rounding the sum to 2 decimals;\r\n * **/\r\nexports.Sku = class {\r\n    /**constructor\r\n     * @param: {object} itemsObj; initial data\r\n     */\r\n    constructor ( itemsObj ) {\r\n        if (Object.keys(itemsObj).length) {\r\n            for (let prop in itemsObj) {\r\n                this[prop] = itemsObj[prop];\r\n            }\r\n        } else throw new Error('no data in the given obj' + itemsObj.toString());\r\n    }\r\n\r\n    getAllProps() {\r\n        return Object.keys(this);\r\n    }\r\n\r\n    initProperty(prop, value=null) {\r\n        if (prop in this) {\r\n            if ( !value ) {\r\n                return this[prop];\r\n            }\r\n\r\n            this[prop] = value;\r\n            return this[prop];\r\n        } else throw new Error(\"no such property found\");\r\n    }\r\n\r\n    getSum() {\r\n        let sum = Math.round((this.price * this.itemQnty) * 100) / 100;\r\n        return sum.toFixed(2);\r\n    }\r\n};\r\n\r\n/**@description: creates a new Order, based on the chosen goods;\r\n * It calculates the total Sum to pay with account to the taxes and the shipment cost; *\r\n * **/\r\nexports.Order = class {\r\n    /**constructor\r\n     * @param {array} skuArr: Array of Sku samples;\r\n     * @param {number} tax: taxes as the share, percentage in {number};\r\n     * @param {number} shippingCost: cost as the share, percentage in {number};\r\n     */\r\n    constructor(skuArr, tax=0, shippingCost=0) {\r\n        this.orderNo = null;\r\n        this.payer = null; //will be added when the form is filled\r\n        this.recipient = null; //will be added when the form is filled\r\n        this.skuArr = skuArr;\r\n        this.tax = tax;\r\n        this.shipping = shippingCost;\r\n        this.orderDate = new Date();\r\n    }\r\n\r\n    /**@description it calculates the total sum from each chosen item;\r\n     * */\r\n    getSubtotalSum() {\r\n        let subtotal = 0;\r\n        this.skuArr.forEach(sku => {\r\n            subtotal += +sku.getSum();\r\n        });\r\n\r\n        if (subtotal) {\r\n            return Math.round(subtotal * 100) / 100;\r\n        }\r\n        else {\r\n            throw new Error(\"Something is wrong with price or qnty of sku\");\r\n        }\r\n    }\r\n\r\n    /**@description it calculates the tax value from the total sum of the chosen goods;\r\n     * The tax is calculated as the share of the given sum;\r\n     * @param {number} subtotal;  subtotal sum\r\n     * @return {number};\r\n     * */\r\n    getTax() {\r\n        let subtotal = this.getSubtotalSum();\r\n        return Math.round(((subtotal / 100) * this.tax) * 100) / 100;\r\n    }\r\n\r\n    /**@description it calculates the shipment value from the total sum of the chosen goods;\r\n     * The shipment is calculated as the share of the given sum;\r\n     * @param {number} subtotal; subtotal sum\r\n     * @return {number};\r\n     * */\r\n    getShipping() {\r\n        let subtotal = this.getSubtotalSum();\r\n        return Math.round(((subtotal / 100) * this.shipping) * 100) / 100;\r\n    }\r\n\r\n    /**@description it calculates the shipment value from the total sum of the chosen goods;\r\n     * The shipment is calculated as the share of the given sum;\r\n     * @param {number} subtotal;\r\n     * @return {number};\r\n     * */\r\n    getTotalSum() {\r\n        let subtotal = this.getSubtotalSum();\r\n        let result = subtotal + this.getTax() + this.getShipping();\r\n        return Math.round(result * 100) / 100;\r\n    }\r\n\r\n    /**@description Getter/Setter combination:\r\n     * - if value !== null, then to set the given property with the given value\r\n     * and to return new value of the property;\r\n     * - else, to return the value of the given property;\r\n     * @param {string} prop; the property name;\r\n     * @param {null} value; it can take all types;\r\n     * */\r\n    initProperty(prop, value=null) {\r\n        if (prop in this) {\r\n            if (!value) {\r\n                return this[prop];\r\n            }\r\n            this[prop] = value;\r\n            return this[prop];\r\n        } else {\r\n            throw new Error(\"no such property found\");\r\n        }\r\n    }\r\n};",
    "'use strict';\r\n\r\n/**@description\r\n * - checking for the initial localStorage and the Creation Date;\r\n * If localStorage doesn`t exist or the Creation Date is longer than 1 day, then\r\n * to create the localStorage with the given data, creating the Creation Date;\r\n * In real project the localStorage with the chosen goods will be already set;\r\n * - To check for the quantity of the chosen goods in the localStorage and to show this\r\n * quantity in the header DOM element with id name \"cart__qnty\"; In real project this\r\n * indicator should be initiated in the <header />, which is common for all pages,\r\n * including this form page;\r\n * - If the form by id-name exists, then to equal heights of the left and right bars;\r\n * - to init App with the prepared args;\r\n * */\r\nwindow.addEventListener(\"DOMContentLoaded\", function() {\r\n    const tax = 20;\r\n    const shippingCost = 30;\r\n    const innData = require('./partial/initialData');\r\n    const cssVars = require('./partial/cssVars');\r\n    const initForm = require('./partial/initForm');\r\n\r\n    /**@description the initial data, will be passed as the arguments;\r\n     * @property {array} chosenArr; initial data of the chosen items;\r\n     * @property {array} areaArr; conditionally fetched list of countries;\r\n     * @property {object} init; comprises the inner funcs;\r\n     * @property {object} inputNamesObj; comprises the form inputs` data;\r\n     * @property {object} regExpObj; regExp data for validating the form inputs;\r\n     * @property {object} personInfo; will be set when all required inputs filled\r\n     * */\r\n    const data = {\r\n            ...cssVars,\r\n        order: {},\r\n        tax,\r\n        shippingCost,\r\n        stage: 0,\r\n        chosenArr: innData.chosenArr,\r\n        areaArr: innData.areaArr,\r\n        init: require('./partial/funcCollection'),\r\n        inputNamesObj: require('./partial/inputsData'),\r\n        regExpObj: require('./partial/regExpData'),\r\n        inputValues: {}\r\n    };\r\n\r\n    /**@description checks for the localStorage or creates it;\r\n     * @param {string} data.storageChosen; The name of the localStorage;\r\n     * @param {array} data.chosenArr; The data to store in the localStorage;\r\n     * */\r\n    if (data.init.checkInStorage(data.storageChosen, data.chosenArr)\r\n        && data.init.checkInStorage(data.storageArea, data.areaArr)\r\n        && document.forms[data.formName]) {\r\n\r\n        data.form = document.getElementById(data.formName);\r\n        data.headerCartQnty = document.getElementById(data.cartQntyName);\r\n        data.stageWrapper = document.getElementById(data.stageWrapperName);\r\n\r\n        data.localStore = JSON.parse(localStorage.getItem(data.storageChosen));\r\n\r\n        /**@description to get the quantity of the chosen goods from the localStorage;\r\n         * To show the quantity in the header with the el '#cart__qnty';\r\n         * */\r\n        if ( data.headerCartQnty ) {\r\n            data.headerCartQnty.textContent = data.localStore.data.length;\r\n        } else {\r\n            throw new Error(`no id ${data.cartQntyName} found`);\r\n        }\r\n\r\n        /**@description the collection is used for equalizing the heights of given Els:\r\n         * - 'person-info', left column, which contains the form fields;\r\n         * - 'cart-info', right column, which contains the cart data fields;\r\n         * */\r\n        const colsArr = [\r\n            document.querySelector(`.${data.leftBarName}`),\r\n            document.querySelector(`.${data.rightBarName}`)\r\n        ];\r\n\r\n        /**@description making heights of the columns in the form to be equal by height;\r\n         * @param {array} colsArr; The array of columns to equalize in height;\r\n         * */\r\n        data.init.equalHeights( colsArr );\r\n\r\n        /**@description initiating the form with the prepared data;\r\n         * @param {object} data; initial data;\r\n         * */\r\n        initForm( data );\r\n\r\n    } else {\r\n        throw new Error(\"form #'order-form' not found or localStorage init error\");\r\n    }\r\n});\r\n\r\n///dev\r\nfunction log(item) {\r\n    console.log(item);\r\n}",
    "'use strict';\r\n\r\n/**@description When the order data is posted, then\r\n * on response OK to show final thanks in DOM.\r\n * @param {object} data: the initial data with funcs and variables;\r\n * */\r\nmodule.exports = ( data ) => {\r\n    const { form, order, active, ready } = data;\r\n    const rightBar = document.querySelector(`.${data.rightBarName}`);\r\n    const thankU = document.querySelector(`.${data.thankU}`);\r\n    const orderNumberSpan = document.getElementById(data.orderNoSpan);\r\n    const payerEmailSpan = document.getElementById(data.payerEmailSpan);\r\n    const orderDateSpan = document.getElementById(data.orderDate);\r\n    const resultLink = thankU.querySelector(`.${data.resultLink}`);\r\n\r\n    form.remove();\r\n    rightBar.classList.add(ready); //giving shade layer to the cart block\r\n    thankU.classList.add(active); //showing 'thanks'\r\n\r\n    orderNumberSpan.textContent = order.orderNo;\r\n    orderDateSpan.textContent = order.orderDate.toDateString();\r\n    payerEmailSpan.textContent = order.payer['billing-email'];\r\n\r\n    log(thankU);\r\n\r\n    resultLink.addEventListener('click', () => {\r\n        console.log(order);\r\n    });\r\n};\r\n\r\n///dev\r\nfunction log(item) {\r\n    console.log(item);\r\n}",
    "'use strict';\r\n\r\n///imports\r\nconst buildThanks = require(\"./buildThanks\");\r\n\r\n/**@description: Checking the empty inputs for the each stage of the form:\r\n * 'Shipping', 'Billing', 'Payment');\r\n * At the next stages it checks the inputs of the current and previous stages (for safe);\r\n * The 'optional' inputs (with the stage \"-1\") will be omitted\r\n * The first empty input will have the alarm message above it.\r\n * All empty but required inputs will be marked.\r\n * **/\r\nmodule.exports = ( data ) => {\r\n    let { stage, active } = data;\r\n    let emptyInputArr = []; //refreshing previous results of the empty inputs` array\r\n\r\n//there are three stages (0, 1, 2)\r\nconst stageArr = data.stageWrapper.querySelectorAll(\"span[data-type=\\\"stage\\\"]\");\r\nconst formBlockArr = data.form.querySelectorAll(`.${data.formBlock}`);\r\n\r\n    data.init.removeAlerts(data); //removing previous possible alert message\r\n    data.init.unmarkInputs(data); //unmarking all previous marking inputs\r\n\r\n    for (let elem in data.inputNamesObj) {\r\n        if (data.inputNamesObj[elem].stage <= stage\r\n            && data.inputNamesObj[elem].stage !== -1) { //except inputs 'optional'...not required\r\n\r\n            let inputEl = data.form.elements[elem];\r\n\r\n            if (inputEl) { //if input exists in DOM\r\n                if (!inputEl.value) { //if input is empty\r\n                    if (inputEl.name === \"recipient-country\" //if pseudo input in country selection\r\n                        || inputEl.name === \"billing-country\") {\r\n\r\n                        let pseudoInput = data.form.querySelector(`span[data-type=${inputEl.name}]`);\r\n                        let pseudoInputWrapper = pseudoInput.parentElement;\r\n\r\n                        pseudoInputWrapper.classList.add(\"marked\");// marking pseudo input Parent\r\n                        emptyInputArr.push(pseudoInputWrapper.parentElement); //pushing the Parent of the pseudoInput Wrapper;\r\n                    }\r\n                    else {\r\n                        inputEl.classList.add(\"marked\");\r\n                        emptyInputArr.push(inputEl.parentElement);\r\n                    }\r\n                }\r\n            }\r\n            else throw new Error(\"no DOM input by name \" + elem + \"found\");\r\n        }\r\n    }\r\n\r\n    /**@description if some empty input(s) found, then to insert the alarm span and\r\n     * to focus on the first empty input;\r\n     * to mark all empty inputs;\r\n     * if the stage is final and the inputs are filled, then to finalize the order data\r\n     * and to init 'thankU' block;\r\n     * */\r\n    if (emptyInputArr.length) {\r\n        data.init.insertAlarm(emptyInputArr[0], data);\r\n    }\r\n    else {\r\n        if (stage < stageArr.length - 1) {\r\n            data.stage = ++stage;\r\n            data.init.updateStage(stage, [stageArr, formBlockArr], active );\r\n\r\n            const buttonNext = data.form.querySelector(`.${data.buttonContinue}`);\r\n            if (stage === 2) {\r\n                buttonNext.textContent = 'Pay Securely';\r\n            }\r\n        }\r\n        else {\r\n            ///conditionally POSTing the order data and receiving the order No\r\n            const orderNo = \"12345_ab_bl11\";\r\n\r\n            data.order.initProperty('orderNo', orderNo);\r\n            data.init.processOrder( data );\r\n\r\n            buildThanks(data);\r\n        }\r\n    }\r\n};\r\n\r\n///dev\r\nfunction log(item) {\r\n    console.log(item);\r\n}",
    "'use strict';\r\n\r\n/**@description\r\n * - creates the DOM elements from the given 'cartData';\r\n * - calculates the values and shows them in the created DOM els;\r\n * @param {object} cartData; It contains the array of Sku Samples and CSS class-names;\r\n * */\r\nmodule.exports = ( cartData ) => {\r\n    const { order } = cartData;\r\n\r\n    let cartContainer = document.getElementById(cartData.cartList);\r\n    let cartInfoTotal = document.querySelector(`.${cartData.cartInfoTotal}`);\r\n\r\n    order.skuArr.forEach(sku => {\r\n        let imgSrc = sku.initProperty(\"photoUrl\"),\r\n            itemName = sku.initProperty(\"itemName\"),\r\n            itemSum = sku.getSum(),\r\n            itemDetail = sku.initProperty(\"itemDetail\"),\r\n            itemQnty = sku.initProperty(\"itemQnty\");\r\n\r\n        let item = document.createElement(\"div\");\r\n        item.classList.add(cartData.cartItem);\r\n\r\n        let imgWrapper = document.createElement(\"div\");\r\n        imgWrapper.setAttribute(\"class\", cartData.imageContainer);\r\n        item.appendChild(imgWrapper);\r\n\r\n        let img = document.createElement(\"img\");\r\n        img.setAttribute(\"src\", imgSrc);\r\n        img.setAttribute(\"alt\", \"item image\");\r\n        imgWrapper.appendChild(img);\r\n\r\n        let itemInfo = document.createElement(\"div\");\r\n        itemInfo.classList.add(cartData.cartItemInfo);\r\n        item.appendChild(itemInfo);\r\n\r\n        let itemInfoMain = document.createElement(\"div\");\r\n        itemInfoMain.setAttribute(\"class\", \"flex-box between\");\r\n        itemInfo.appendChild(itemInfoMain);\r\n\r\n        let spanName = document.createElement(\"span\");\r\n        spanName.setAttribute(\"data-cart\", \"itemName\");\r\n        spanName.textContent = itemName;\r\n        itemInfoMain.appendChild(spanName);\r\n\r\n        let spanSum = document.createElement(\"span\");\r\n        spanSum.setAttribute(\"data-cart\", \"itemSum\");\r\n        spanSum.textContent = \"$\" + itemSum;\r\n        itemInfoMain.appendChild(spanSum);\r\n\r\n        let itemInfoSpec = document.createElement(\"div\");\r\n        itemInfoSpec.classList.add(cartData.cartItemSpec);\r\n        itemInfo.appendChild(itemInfoSpec);\r\n\r\n        let spanDetail = document.createElement(\"span\");\r\n        spanDetail.setAttribute(\"data-cart\", \"itemDetail\");\r\n        spanDetail.textContent = itemDetail;\r\n        itemInfoSpec.appendChild(spanDetail);\r\n\r\n        let span = document.createElement(\"span\");\r\n        span.textContent = \"Quantity:\";\r\n        itemInfoSpec.appendChild(span);\r\n\r\n        let spanQnty = document.createElement(\"span\");\r\n        spanQnty.setAttribute(\"data-cart\", \"itemQnty\");\r\n        spanQnty.textContent = itemQnty;\r\n        span.appendChild(spanQnty);\r\n\r\n        cartContainer.appendChild(item);\r\n        cartContainer.appendChild(document.createElement(\"hr\"));\r\n    });\r\n\r\n    if (cartInfoTotal) {\r\n        let spanArr = cartInfoTotal.querySelectorAll(\"span\");\r\n        spanArr.forEach(item => {\r\n            let data = item.dataset.cart;\r\n            if (data) {\r\n                /**@description emitting 'switch case' method by the object of funcs;\r\n                 * */\r\n                let cartData = {\r\n                    \"subTotal\": () => {\r\n                        item.textContent = \"$\" + order.getSubtotalSum().toFixed(2);\r\n                    },\r\n                    /**@description getting cost for shipping. If 0 than to show \"free\";\r\n                     * */\r\n                    \"shippingCost\": () => {\r\n                        let result = order.getShipping();\r\n                        item.textContent = result\r\n                            ? \"$\" + result.toFixed(2)\r\n                            : 'free';\r\n                    },\r\n                    \"taxCost\": () => {\r\n                        item.textContent = \"$\" + order.getTax().toFixed(2);\r\n                    },\r\n                    \"totalPrice\": () => {\r\n                        item.textContent = \"$\" + order.getTotalSum().toFixed(2);\r\n                    }\r\n                };\r\n                if (data in cartData) {\r\n                    cartData[data]();\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error(`class ${cartData.cartInfoTotal} not found in DOM`);\r\n    }\r\n};",
    "'use strict';\r\n\r\n/**@description the list of style names, used in DOM:\r\n * formName - the id-name of the form to work with;\r\n * storageChosen - the name of the localStorage of the chosen items;\r\n * storageArea - the name of the localStorage of the Area list, (conditionally) fetched;\r\n *               it will be used for the country search and selection in the form;\r\n * leftBarName - the name of the left bar with the form fields;\r\n * rightBarName - the name of the right bar with the cart data fields;\r\n * cartQntyName - the id-name of the DOM El, showing the number of the chosen items;\r\n * cartList - the id-name of the DOM Container, comprising the blocks of the goods;\r\n * cartInfoTotal - the class of the DOM Wrapper, showing the total\r\n *                 calculation values of the purchase;\r\n * cartInfoTotalRow - the class of the row in 'cartInfoTotal' wrapper;\r\n * cartItem - the DOM Container of the chosen goods-item;\r\n * imageContainer - the class of the DOM Wrapper, containing img;\r\n * cartItemInfo - the class of the DOM Wrapper, containing the Cart Item Info;\r\n * cartItemSpec - the class of the DOM El, containing the details of the Cart Item Info;\r\n * formBlock - the class of three form blocks for each Registration Stage;\r\n * stageWrapperName - the class of the DOM Container comprising 'stages' in <span>;\r\n * selectionBlock - the class of the block, which contains the selection from the list;\r\n * optionWrapper - the class, wraps the list of countries to choose from;\r\n * alertMessage - the class of the span of the alarm message;\r\n * marked - the class for the marked inputs\r\n * tax - {number} percent share will be taken from the sum of the Order;\r\n * shippingCost - {number} the cost for the shipment as the percent share from the sum;\r\n * innData - {object} initial data; in project will be replaced with the real data of the\r\n * chosen goods and the real fetching of the countries list;\r\n * */\r\nmodule.exports = {\r\n    formName: 'order-form',\r\n    storageChosen: 'chosen',\r\n    storageArea: 'area',\r\n    leftBarName: 'person-info',\r\n    rightBarName: 'cart-info',\r\n    cardType: 'card-type',\r\n    cartQntyName: 'cart__qnty',\r\n    cartList: 'cart-list',\r\n    cartInfoTotal: 'cart-info__total',\r\n    cartInfoTotalRow: 'cart-info__total__row',\r\n    cartItem: 'cart-item',\r\n    imageContainer: 'image-container goods',\r\n    cartItemInfo: 'cart-item__info',\r\n    cartItemSpec: 'cart-item__spec',\r\n    formBlock: 'form__block',\r\n    stageWrapperName: 'form__stage-wrapper',\r\n    selectionBlock: 'selection__block',\r\n    optionWrapper: 'option-wrapper',\r\n    alertMessage: 'alert-message',\r\n    marked: 'marked',\r\n    active: 'active',\r\n    ready: 'ready',\r\n    bold: 'bold',\r\n    red: 'red',\r\n    thankU: 'thankU-wrapper',\r\n    orderNoSpan: 'order-number',\r\n    payerEmailSpan: 'payer-email',\r\n    orderDate: 'order-date',\r\n    buttonContinue: 'button_continue',\r\n    resultLink: 'thankU-wrapper__resultLink'\r\n};",
    "'use strict';\r\n\r\n/**@description\r\n * - it hangs listeners to 'keydown', 'focus', 'blur', 'input', 'change' events;\r\n * - \"click\" events are hanged on the total form, identifying the target\r\n * by the dataset value of the attributes;\r\n * */\r\nmodule.exports = ( data ) => {\r\n    const checkForNext = require('./checkForNext');\r\n    const testRegExp = require('./testRegExp');\r\n    const {\r\n        form, active, bold,\r\n        marked, red, cardType\r\n    } = data;\r\n\r\n    /**@description\r\n     * if during input the 'enter' or 'escape' keys pressed, then the input is blur\r\n     * */\r\n    form.addEventListener(\"keydown\", (ev) => {\r\n        let target = ev.target;\r\n        if (ev.keyCode === 13 || ev.keyCode === 27) {\r\n            target.blur();\r\n        }\r\n    }, true);\r\n\r\n    /**@description\r\n     * if target is focused, then to highlight the border of the Parent Element;\r\n     * */\r\n    form.addEventListener(\"focus\", ({ target }) => {\r\n        if (target.name !== \"recipient-country\" && target.name !== \"billing-country\") {\r\n            toggleParent(target, active);\r\n        }\r\n    } ,true);\r\n\r\n    /**@description\r\n     * if target is blur, then to hide the border of the Parent Element;\r\n     * */\r\n    form.addEventListener(\"blur\", ({ target }) => {\r\n        if (target.name !== \"recipient-country\" && target.name !== \"billing-country\") {\r\n            toggleParent(target, active);\r\n        }\r\n    } ,true);\r\n\r\n///CLICK EVENT\r\n    form.addEventListener(\"click\", ({ target }) => {\r\n        if (target.closest(\"div\").dataset.type === \"continue\") {\r\n            /**@description if the button \"continue\" is clicked then to check all\r\n             * inputs of the current and previous stages to be filled;\r\n             * */\r\n            checkForNext( data );\r\n        }\r\n\r\n        /**@description if pseudo-input 'country' is clicked then the selection list\r\n         * opens in the absolute for the selection from the list of the values;\r\n         * On filling the input the matched list of the countries is shown to select;\r\n         * When the selection is made, then to transfer the value to the hidden input;\r\n         * */\r\n        if (target.closest(`.${data.selectionBlock}`)) {\r\n            let selectBlock = target.closest(`.${data.selectionBlock}`); //pseudo-input wrapper\r\n            let hiddenInput = selectBlock.parentElement.querySelector(\"input\"); //getting inner input\r\n            let optionBlock = hiddenInput.parentElement; //intermediate wrapper of the input\r\n\r\n            hiddenInput.value = \"\"; //resetting value of the search-input\r\n\r\n            setSelectList(optionBlock, data.areaArr); //creating list of option items (span)\r\n\r\n            optionBlock.classList.add(active); //to switch display: block from none\r\n            selectBlock.classList.add(active); //to display the search-icon in absolute\r\n            hiddenInput.focus();\r\n        }\r\n\r\n        if (target.dataset.type === 'option') {\r\n            let optionBlock = target.parentElement.parentElement;\r\n            let hiddenInput = optionBlock.querySelector(\"input\"); // \"recipient-country\" or \"billing-country\"\r\n            let selectBlock = optionBlock.parentElement;\r\n            let pseudoInput = selectBlock.querySelector(`span[data-type=${hiddenInput.name}`);\r\n\r\n            hiddenInput.value = \"\"; //resetting for getting round blur event checking\r\n            hiddenInput.value = target.textContent;\r\n\r\n            if (hiddenInput.value.length) {\r\n                pseudoInput.textContent = hiddenInput.value;\r\n                pseudoInput.classList.add(bold);\r\n\r\n                /**@description\r\n                 * - to switch block to display: none;\r\n                 * - to switch the search-icon off\r\n                 * */\r\n                setTimeout(() => {\r\n                    optionBlock.classList.remove(active);\r\n                    selectBlock.querySelector(`.${data.selectionBlock}`).classList.remove(active);\r\n                }, 200);\r\n            }\r\n        }\r\n    });\r\n\r\n///INPUT EVENT\r\n    form.addEventListener(\"input\", ({ target }) => {\r\n        let rExpType = data.inputNamesObj[target.name].type;\r\n\r\n       /**@description testing input.value with its regExp, stored in 'inputNamesObj';\r\n        * */\r\n       testRegExp(target, data);\r\n\r\n        if (rExpType === \"stringMaySpace\") {\r\n            if (searchInArray(target.parentElement, target.value, data)) { //searching chars in the country array\r\n                target.style.color = \"\";\r\n            }\r\n            else {\r\n                target.classList.add(red);\r\n            }\r\n        }\r\n    }, true);\r\n\r\n///CHANGE EVENT\r\n    form.addEventListener(\"change\", ({ target }) => {\r\n        let rExpType = data.inputNamesObj[target.name].type;\r\n\r\n        target.value = target.value.trim();\r\n\r\n        if (target.value.length) {\r\n            if (!data.regExpObj[rExpType].test(target.value)) { //rechecking the value for safe\r\n                target.value = \"\";\r\n                target.classList.add(marked);\r\n                data.init.showAlertAndOff(target.parentElement, data, \"error\");\r\n            }\r\n            else {  //if value preliminary validated through regExp\r\n                data.init.removeAlerts(data);\r\n                target.classList.remove(marked);\r\n\r\n                let cases = {\r\n                    \"spacedString\": function () {\r\n                        let val = target.value;\r\n                        if (val.split(\" \").length === 1) { //if no second word (0 is null!)\r\n                            target.value = \"\";\r\n                            target.classList.add(marked);\r\n                            data.init.showAlertAndOff(target.parentElement, data, \"error\");\r\n                        }\r\n                    },\r\n                    \"zip\": function () {\r\n                        if (target.value.length < 6) {\r\n                            target.value = \"\";\r\n                            target.classList.add(marked);\r\n                            data.init.showAlertAndOff(target.parentElement, data, \"error\");\r\n                        }\r\n                    },\r\n                    \"phone\": function () {\r\n                        if (target.value.length < 16) { //if validated value is less then needed\r\n                            target.value = \"\";\r\n                            target.classList.add(marked);\r\n                            data.init.showAlertAndOff(target.parentElement, data, \"error\");\r\n                        }\r\n                        else {\r\n                            target.value = target.value.slice(0, 2) + \" \" + target.value.slice(2);\r\n                            target.value = target.value.slice(0, 8) + \" \" + target.value.slice(8);\r\n                        }\r\n                    },\r\n                    \"stringMaySpace\": function () {\r\n                        ///span which hides the input and option list in absolute hidden\r\n                        let pseudoInput = data.form.querySelector(`span[data-type=${target.name}`);\r\n                        let optionBlock = target.parentElement;\r\n                        let selectionBlock = optionBlock.parentElement.querySelector(`.${data.selectionBlock}`);\r\n                        let res = false;\r\n\r\n                        if (data.areaArr.includes(target.value)) {\r\n                            res = true;\r\n                        }\r\n\r\n                        if (!res) {\r\n                            target.classList.add(red);\r\n                            pseudoInput.classList.remove(bold);\r\n                        }\r\n                        else {\r\n                            pseudoInput.textContent = target.value;\r\n                            pseudoInput.classList.remove(red);\r\n                            pseudoInput.classList.add(bold);\r\n                            setTimeout(() => {\r\n                                optionBlock.classList.remove(active);  //to switch block to display: none\r\n                                selectionBlock.classList.remove(active); //to switch the search-icon off\r\n                            }, 300);\r\n                        }\r\n                    },\r\n                    \"cardNumber\": function () {\r\n                        if (target.value.length < 16) { //if validated value is less then needed\r\n                            target.value = \"\";\r\n                            target.classList.add(marked);\r\n                            data.init.showAlertAndOff(target.parentElement, data, \"error\");\r\n                        }\r\n                        else {\r\n                            let temp = target.value;\r\n                            temp = temp.replace(/ /gi, \"\");\r\n                            for (let i = 4; i < temp.length; ) {\r\n                                temp = temp.slice(0, i) + \" \" + temp.slice(i);\r\n                                i += 5;\r\n                            }\r\n                            target.value = temp;\r\n                            target.parentElement.classList.add(cardType); //adding card-icon to DOM element\r\n                        }\r\n                    },\r\n                    \"cardDate\": function () {\r\n                        if (target.value.length < 4) { //if validated value is less then needed\r\n                            target.value = \"\";\r\n                            target.classList.add(marked);\r\n                            data.init.showAlertAndOff(target.parentElement, data, \"error\");\r\n                        }\r\n                        else {\r\n                            let m = target.value.slice(0, 2);\r\n                            let y = target.value.slice(-2);\r\n                            let curDate = new Date();\r\n                            let curYear = curDate.getFullYear();\r\n                            let curYearLastDits = curYear.toString().slice(-2); //getting last two digits of year\r\n                            let innDate = null; //incoming date\r\n\r\n                            if (y >= curYearLastDits) {\r\n                                if (m >= 0 && m < 13) {  //writing as Jan - 1 (not as 0)\r\n                                    innDate = data.init.stringToDate(y, m);\r\n                                    if (innDate > curDate) {\r\n                                        target.value = target.value.slice(0,2) + \" / \" + target.value.slice(2);\r\n                                    }\r\n                                    else {\r\n                                        target.value = \"\";\r\n                                        target.classList.add(marked);\r\n                                        data.init.showAlertAndOff(target.parentElement, data, \"card date is expired\");\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    target.value = \"\";\r\n                                    target.classList.add(marked);\r\n                                    data.init.showAlertAndOff(target.parentElement, data, `month: ${m} is not correct`);\r\n                                }\r\n                            }\r\n                            else {\r\n                                target.value = \"\";\r\n                                target.classList.add(marked);\r\n                                data.init.showAlertAndOff(target.parentElement, data, \"card date is expired\");\r\n                            }\r\n                        }\r\n                    },\r\n                    \"email\": function () { //very simple for email: to be validated on the Back\r\n                        if (target.value.indexOf(\"@\") < 0 || target.value.indexOf(\".\") < 0) {\r\n                            target.value = \"\";\r\n                            target.classList.add(marked);\r\n                            data.init.showAlertAndOff(target.parentElement, data, \"error\");\r\n                        }\r\n                    }\r\n                };\r\n                if (cases[rExpType]) {\r\n                    cases[rExpType]();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    \r\n\r\n//////FUNCTIONS\r\n    /**@description toggles the Parent element`s border;\r\n     * @param {object} target; DOM element, which has the Parent`s border to toggle;\r\n     * @param {string} classActive; the class-name to highlight the DOM element;\r\n     * */\r\n    function toggleParent( target, classActive ) {\r\n        target.parentElement.classList.toggle(classActive);\r\n    }\r\n\r\n    /**@description: dynamically creates the option list of the countries, which will\r\n     * be filtered on matching the search input value;\r\n     * It listens to the input and sorts countries` list with the matching chars.\r\n     * @param {object} objTarget - the DOM Container for the option list\r\n     * @param {array} areaArr - the list of the countries for selection\r\n     * */\r\n    function setSelectList(objTarget, areaArr) {\r\n        let optionWrapper = objTarget.querySelector(`.${data.optionWrapper}`);\r\n        if (optionWrapper) {\r\n            optionWrapper.parentElement.removeChild(optionWrapper); //remaking optionWrapper\r\n        }\r\n        optionWrapper = document.createElement(\"div\");\r\n        optionWrapper.classList.add(data.optionWrapper);\r\n\r\n        for (let i = 0; i < areaArr.length; i++) {\r\n            let option = document.createElement(\"span\");\r\n            option.setAttribute(\"data-type\", \"option\");\r\n            option.textContent = areaArr[i];\r\n            optionWrapper.appendChild(option);\r\n        }\r\n        objTarget.insertBefore(optionWrapper, objTarget.firstChild);\r\n    }\r\n};\r\n\r\n    /**@description\r\n     * @param {object} parentTarget; the wrapper of the input;\r\n     * @param {string} searchStr; the type of the message (\"empty\", \"error\", \"custom\");\r\n     * @param {object} data: the initial data with funcs and variables;\r\n     * */\r\n    function searchInArray(parentTarget, searchStr, data) {\r\n        let foundArr = data.areaArr.filter(item => {\r\n            return item.indexOf(searchStr) !== -1;\r\n        });\r\n\r\n        if (foundArr.length) {\r\n            setSelectList(parentTarget, foundArr, data);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@description: dinamically creates the option list of countries;\r\n     * It listens to the 'input' event and sorts the countries` list with the matching chars;\r\n     * @param {object} parentTarget the DOM Container for the option list\r\n     * @param {array} foundArr - the list of the countries\r\n     * @param {object} data: the initial data with the funcs and the variables;\r\n     * */\r\n    function setSelectList(parentTarget, foundArr, data) {\r\n        let optionWrapper = parentTarget.querySelector(`.${data.optionWrapper}`);\r\n        if (optionWrapper) {\r\n            optionWrapper.parentElement.removeChild(optionWrapper); //remaking optionWrapper\r\n        }\r\n        optionWrapper = document.createElement(\"div\");\r\n        optionWrapper.classList.add(data.optionWrapper);\r\n\r\n        for (let i = 0; i < foundArr.length; i++) {\r\n            let option = document.createElement(\"span\");\r\n            option.setAttribute(\"data-type\", \"option\");\r\n            option.textContent = foundArr[i];\r\n            optionWrapper.appendChild(option);\r\n        }\r\n        parentTarget.insertBefore(optionWrapper, parentTarget.firstChild);\r\n    }\r\n\r\n    ///dev\r\n    function log(item) {\r\n        console.log(item);\r\n    }",
    "'use strict';\r\n\r\n//imports\r\nconst { Sku, Order } = require('../classes');\r\n\r\n/**@description:\r\n * It checks for the localStorage to exist, then:\r\n * - if false, it creates the object with the Creation Date and the given Data,\r\n * then stores it in the localStorage;\r\n * - if true, it checks for the Creation Date of the stored Object. If the time\r\n * difference is more, than 1 day (instance), then it creates new localStorage;\r\n * @param {string} name; The name of the localStorage;\r\n * @param {array} arr; {array} of objects;\r\n * **/\r\nexports.checkInStorage = (name, arr) => {\r\n    let storage = localStorage.getItem(name);\r\n    let innData;\r\n\r\n    if ( storage ) {\r\n        innData = JSON.parse(storage);\r\n        const creationDate = new Date(innData.creationDate);\r\n        const currentDate = new Date();\r\n\r\n        if (((currentDate - creationDate)/1000/60/60/24) < 1) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    setLocalStorage(name, arr);\r\n    return !!(localStorage.getItem(name));\r\n};\r\n\r\n/**@description equalizes the heights of the DOM elements.\r\n * @param {array} colsArr; the array of the DOM elements to equalize;\r\n * */\r\nexports.equalHeights = ( colsArr ) => {\r\n    let highestCal = 0;\r\n    for (let i = 0; i < colsArr.length; i++) {\r\n        if (colsArr[i].offsetHeight >= highestCal) {\r\n            highestCal = colsArr[i].offsetHeight;\r\n        }\r\n    }\r\n    colsArr.forEach(col => col.style.height = highestCal + \"px\");\r\n};\r\n\r\n/**@description creates the array of Sku Samples from the array of the chosen goods;\r\n * @param {array} chosenArr; The array of the chosen goods;\r\n * @return {array} of Sku Samples;\r\n * */\r\nexports.createSku = ( chosenArr ) => {\r\n    return chosenArr.map(sku => new Sku(sku));\r\n};\r\n\r\n/**@description creates a new Order Sample with the data on the chosen goods;\r\n * @param {array} skuArr; The array of Sku Samples with the data on the chosen goods;\r\n * @param {number} tax;\r\n * @param {number} shippingCost;\r\n * @return {object} new Order Sample;\r\n * */\r\nexports.makeOrder = (skuArr, tax, shippingCost) => {\r\n    return new Order(skuArr, tax, shippingCost);\r\n};\r\n\r\n/**@description\r\n * - to remove the className 'active' from the array of nodes;\r\n * - to highlight the corresponding 'span' in the array, adding class 'active';\r\n * - to show the corresponding form block with the inputs, adding class 'active';\r\n * By adding the class, the node becomes visible/highlighted;\r\n * @param {number} stage; The stage of the form; Initially it is 0;\r\n * @param {array} blocksArr; The array of the nodeLists to work with;\r\n * @param {string} className; the classname to highlight the DOM el;\r\n * */\r\nexports.updateStage = ( stage=0, blocksArr, className ) => {\r\n    if (blocksArr.length) {\r\n        blocksArr.forEach(nodeList => {\r\n            if (nodeList.length) {\r\n                removeClassIn( nodeList, className );\r\n                nodeList[stage].classList.add(className);\r\n            } else {\r\n                throw new Error(\"the nodeList is empty\");\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error(\"the array of nodeLists given in arguments is empty\");\r\n    }\r\n};\r\n\r\n/**@description removes alert spans opened in DOM\r\n * @param {object} data: the initial data with funcs and variables;\r\n * */\r\nexports.removeAlerts = ({ form, alertMessage }) => {\r\n    let alertArr = form.querySelectorAll(`.${alertMessage}`);\r\n    if (alertArr.length) {\r\n        alertArr.forEach(alert => {\r\n            alert.parentElement.removeChild(alert);\r\n        });\r\n    }\r\n};\r\n\r\n/**@description unmarks the inputs in DOM;\r\n * @param {object} data: the initial data with funcs and variables;\r\n * */\r\nexports.unmarkInputs = ( data ) => {\r\n    let marked = data.form.querySelectorAll(`.${data.marked}`);\r\n    if (marked.length) {\r\n        marked.forEach(item => {\r\n            item.classList.remove(data.marked);\r\n        });\r\n    }\r\n};\r\n\r\n/**@description creates alarm messages for DOM elements;\r\n * @param {object} targetObj: the DOM element will be inserted with the alarm span;\r\n * @param {object} data: the initial data with funcs and variables;\r\n * @param {string} type; 'empty', 'error' or custom as the text of the message;\r\n * */\r\nexports.insertAlarm = ( targetObj, data, type=\"empty\" ) => {\r\n    let message = \"please enter \";\r\n    let inputName;\r\n    let inputEl;  //the inner input\r\n    let object; //the DOM element to insert the alarm message;\r\n\r\n    /**@description to get the input-name for inserting the alarm on the empty input;\r\n     **/\r\n    if (targetObj.classList.contains(data.selectionBlock)) {  //if it is a pseudo input wrapper\r\n        object = targetObj.parentElement;\r\n        inputEl = object.querySelector(\"input\");\r\n        inputName = inputEl.name;\r\n    }\r\n    else if (targetObj.querySelector(\"input\")){\r\n        inputEl = targetObj.querySelector(\"input\");\r\n        inputName = inputEl.name;\r\n        data.form.elements[inputName].style.caretColor = \"red\";\r\n    }\r\n    else throw new Error(\"no input found\");\r\n\r\n    inputEl.focus();\r\n\r\n    if (type === \"empty\") {\r\n        //putting the input`s name to the message content\r\n        message += inputName.replace(/-/g, \" \");\r\n        insertSpan(targetObj, data.alertMessage, message);\r\n    }\r\n    else if (type === \"error\") {\r\n        message = \"format: \";\r\n        message += data.inputNamesObj[inputName][\"error\"]; //creating 'error' message from the name of the input\r\n        insertSpan(targetObj, data.alertMessage, message);\r\n    }\r\n    else insertSpan(targetObj, data.alertMessage, type); //creating custom message\r\n};\r\n\r\n/**@description to show the alarm message above the input wrapper for a certain time,\r\n * then to remove the alarm message;\r\n * @param {object} parentTarget; the wrapper of the input;\r\n * @param {string} type; the type of the message (\"empty\", \"error\", \"custom\");\r\n * @param {object} data: the initial data with funcs and variables;\r\n * */\r\nexports.showAlertAndOff = (parentTarget, data, type=\"empty\") => {\r\n    data.init.insertAlarm(parentTarget, data, type);\r\n    setTimeout(() => {\r\n        data.init.removeAlerts(data);\r\n    }, 1000);\r\n};\r\n\r\n/**@description: separates the properties of the inputs to Recipient and Payer Data;\r\n * it updates the data.order with the values of Recipient and Payer Data;\r\n * @param {object} data: the initial data with funcs and variables;\r\n * ***/\r\nexports.processOrder = ( data ) => {\r\n    getAllInputs(data);\r\n\r\n    const {inputValues, order} = data;\r\n    const emptyInputs = isEmptyProp( inputValues );\r\n    let regExp = /billing/;\r\n\r\n    /**@description processOrder runs only after all inputs are checked to be filled;\r\n     * for development - additional check;\r\n     * */\r\n    if (emptyInputs.length) {\r\n        throw new Error(`found empty inputs: ${emptyInputs.join(', ')}`);\r\n    }\r\n\r\n    /**@description it finalizes the data.order with all purchase details,\r\n     * divided on the payer and recipient sections in data.order (object);\r\n     * @param {object} inputValues; it comprises in props the values of the inputs\r\n     * @param {object} regExp (need for the filter by regExp)\r\n     * @param {object} data.order (all the data on the purchase, collected will be\r\n     * kept in the object.\r\n     * */\r\n    separateObj(inputValues, regExp, order);\r\n};\r\n\r\n/**@description creates the Date from the input chars (yy, mm);\r\n * @param {string} yy - year\r\n * @param {string} mm - month\r\n * @return {object} new Date\r\n * **/\r\nexports.stringToDate = ( yy, mm ) => {\r\n    let month = +mm - 1; //month minus 1 (jan: 0)\r\n    let year = +yy + 2000;\r\n    return new Date(year, month);\r\n};\r\n\r\n///INNER FUNCTIONS\r\n\r\n/**@description it cleans the classname in the nodeList of DOM elements;\r\n * @param {array} nodeList of the elements for removing the classname\r\n * @param {string} className to be removed;\r\n **/\r\nfunction removeClassIn( nodeList, className ) {\r\n    nodeList.forEach(el => {\r\n        el.classList.remove(className);\r\n    });\r\n}\r\n\r\n/**@description\r\n * It create the localStorage with the data and the creation Date;\r\n * @param {string} name; The name of the localStorage;\r\n * @param {array} data; Contains: {string} creationDate, {array} of objects;\r\n * **/\r\nfunction setLocalStorage(name, data)  {\r\n\r\n    let dataWithDate = {};\r\n    if (data.length) {\r\n        dataWithDate = {\r\n            data,\r\n            creationDate: new Date()\r\n        };\r\n        localStorage.setItem(name, JSON.stringify(dataWithDate));\r\n    }\r\n}\r\n\r\n/**@description: insert a span inside the targetObj\r\n * @param {object} parent; the target Object to insert alert in;\r\n * @param {string} alertClass; the class-name of the alert span\r\n * @param {string} message; the alert message;\r\n * **/\r\nfunction insertSpan(parent, alertClass, message) {\r\n    let span = document.createElement(\"span\");\r\n    span.textContent = message;\r\n\r\n    parent.insertBefore(span, parent.firstChild);\r\n    span.setAttribute(\"class\", alertClass);\r\n}\r\n\r\n/**@description checks for the empty properties of an object except the optional\r\n * properties;\r\n * @param {object} obj for searching empty inputs;\r\n * @return {array} the array of empty inputs;\r\n **/\r\nfunction isEmptyProp ( obj ) {\r\n    let emptyInputs = [];\r\n    for (let prop in obj) {\r\n        if (!obj[prop] && !prop.match(/optional/) ) { //if property is empty except 'optional' and 'billing-optional'\r\n            emptyInputs.push( prop );\r\n        }\r\n    }\r\n    return emptyInputs;\r\n}\r\n\r\n/**@description: collects all the values from the form inputs.\r\n * @param {object} data: the initial data with funcs and variables;\r\n **/\r\nfunction getAllInputs( data ) {\r\n    const { inputNamesObj, inputValues } = data;\r\n\r\n    for (let elem in inputNamesObj) {\r\n        if (elem === \"card-date\") {\r\n            let inputValue = data.form.elements[elem].value;\r\n            let inputYear = inputValue.slice(-2);\r\n            let inputMonth = inputValue.slice(0, 2);\r\n            inputValues[elem] = data.init.stringToDate(inputYear, inputMonth);\r\n        }\r\n        else {\r\n            inputValues[elem] = data.form.elements[elem].value;\r\n        }\r\n    }\r\n}\r\n\r\n/**@description to devide the obj properties on two objects by filtering properties\r\n * with the given regExp;\r\n * @param {object} obj; The given object;\r\n * @param {object} regExp; To filter properties with regExp\r\n * @param {object} order;\r\n * */\r\nfunction separateObj(obj, regExp, order) {\r\n    const payer = {};\r\n    const recipient = {};\r\n\r\n    for (let elem in obj) {\r\n        if (elem.match(regExp)) {\r\n            payer[elem] = obj[elem];\r\n        } else {\r\n            recipient[elem] = obj[elem];\r\n        }\r\n    }\r\n\r\n    order.initProperty('payer', payer);\r\n    order.initProperty('recipient', recipient);\r\n}\r\n\r\n///dev\r\nfunction log(item) {\r\n    console.log(item);\r\n}",
    "'use strict';\r\n\r\n/**@description comprises the main operations for initiating the App:\r\n * - it runs 'createSku()' to create the Sku samples from the array of the chosen goods;\r\n * - it runs 'makeOrder()' to create the Order Sample, which comprises all the\r\n * calculations and will be finally ready for fetching to the server;\r\n * - it runs 'createCartDom()' to create DOM elements and to show the chosen\r\n * goods` details and calculation results; *\r\n * - it runs 'runStage()' to highlight the DOM el in the Array and\r\n * to show the corresponding form block to be filled by adding class name;\r\n * - it runs 'listen()' to hang the listeners to the form;\r\n * @param {object} data: the initial data;\r\n * **/\r\nmodule.exports = ( data ) => {\r\n    //creates the DOM elements from the given 'cartData';\r\n    const createCartDom = require('./createCartDom');\r\n    const formListen = require('./formListen');\r\n    //the stage of the form filling;\r\n    let { stage } = data;\r\n\r\n    //there are three stages (0, 1, 2)\r\n    const stageArr = data.stageWrapper.querySelectorAll(\"span[data-type=\\\"stage\\\"]\");\r\n\r\n    //three stage form blocks with the inputs\r\n    const formBlockArr = data.form.querySelectorAll(`.${data.formBlock}`);\r\n\r\n    const skuArr = data.init.createSku(data.chosenArr);\r\n    const { tax, shippingCost } = data;\r\n\r\n    if (skuArr.length) {\r\n        data.order = data.init.makeOrder(skuArr, tax, shippingCost);\r\n    }\r\n\r\n    const cartData = {\r\n        order: data.order,\r\n        cartList: data.cartList,\r\n        cartInfoTotal: data.cartInfoTotal,\r\n        cartItem: data.cartItem,\r\n        imageContainer: data.imageContainer,\r\n        cartItemInfo: data.cartItemInfo,\r\n        cartItemSpec: data.cartItemSpec\r\n    };\r\n\r\n    //creating Cart elements in DOM\r\n    createCartDom( cartData );\r\n\r\n    data.init.updateStage(stage, [stageArr, formBlockArr], data.active);\r\n\r\n    formListen( data );\r\n};\r\n\r\n///dev\r\nfunction log(item) {\r\n    console.log(item);\r\n}",
    "'use strict';\r\n\r\nexports.chosenArr = [\r\n    {\r\n        itemName: \"The Chelsea Boot\",\r\n        itemId: \"18035\",\r\n        price: \"235\",\r\n        itemDetail: \"Black\",\r\n        itemQnty: 1,\r\n        photoUrl: \"./img/boots.png\"\r\n    },\r\n    {\r\n        itemName: \"The Twill Snap Backpack\",\r\n        itemId: \"22016\",\r\n        price: \"65\",\r\n        itemDetail: \"Reverse Denim + Brown leather\",\r\n        itemQnty: 1,\r\n        photoUrl: \"./img/backpack.png\"\r\n    },\r\n    {\r\n        itemName: \"The Twill Zip Tote\",\r\n        itemId: \"38049\",\r\n        price: \"48\",\r\n        itemDetail: \"Reverse Denim + Black leather\",\r\n        itemQnty: 1,\r\n        photoUrl: \"./img/bag.png\"\r\n    }\r\n    ];\r\n\r\nexports.areaArr = [\r\n    \"Romania\", \"Russia\", \"Rwanda\", \"Saint Kitts and Nevis\", \"Saint Lucia\",\r\n    \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\",\r\n    \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\"\r\n];",
    "'use strict';\r\n\r\n/**@description each property name equals the inputs` name of the form;\r\n * The input will be operated with the corresponding properties:\r\n * - error: in case of not valid input value the input will show the correct example\r\n * of the input;\r\n * - type: the type of the input will initiate the corresponding method to validate the\r\n * input value;\r\n * - stage: when submitting the form to switch to the next form stage, the inputs of\r\n * the corresponding stage will be checked to be filled;\r\n * */\r\nmodule.exports = {\r\n    \"recipient-full-name\": {error: \"Jonathan Smith\", type: \"spacedString\", stage: 0},\r\n    \"recipient-phone-number\": {error: \"+7(987)123-77-88\", type: \"phone\", stage: 0},\r\n    \"recipient-street-address\": {error: \"Pushkina\", type: \"string\", stage: 0},\r\n    \"optional\": {error: \"format: All except: '+', '=', '*'\", type: \"combi\", stage: -1},\r\n    \"recipient-city\": {error: \"Kazan\", type:\"string\", stage: 0},\r\n    \"recipient-country\": {error: \"Russia\", type: \"stringMaySpace\", stage: 0},\r\n    \"recipient-zip\": {error: \"420015\", type: \"zip\", stage: 0},\r\n    \"billing-full-name\": {error: \"Jonathan Smith\", type: \"spacedString\", stage: 2},\r\n    \"billing-email\": {error: \"j.smith@gmail.com\", type: \"email\", stage: 1},\r\n    \"billing-street-address\": {error: \"Pushkina\", type: \"string\", stage: 1},\r\n    \"billing-optional\": {error: \"format: All except: '+', '=', '*'\", type: \"combi\", stage: -1},\r\n    \"billing-city\": {error: \"Kazan\", type: \"string\", stage: 1},\r\n    \"billing-country\": {error: \"Russia\", type: \"stringMaySpace\", stage: 1},\r\n    \"billing-zip\": {error: \"420015\", type: \"zip\", stage: 1},\r\n    \"card-name\": {error: \"Jonathan Smith\", type: \"spacedString\", stage: 2},\r\n    \"card-number\": {error: \"3333 7777 8888 3333\", type: \"cardNumber\", stage: 2},\r\n    \"card-date\": {error: \"MMYY: 0518\", type: \"cardDate\", stage: 2},\r\n    \"card-code\": {error: \"0458\", type: \"cardCode\", stage: 2}\r\n};",
    "'use strict';\r\n\r\n/**@description: Validating each char input;\r\n * */\r\nmodule.exports = {\r\n    \"phone\": /^[\\+]?[0-9]{0,1}[(]?[0-9]{0,3}[)]?[0-9]{0,3}[-]?[0-9]{0,2}[-]?[0-9]{0,2}$/,\r\n    \"string\": /^[a-z]{1,30}$/i,\r\n    \"stringMaySpace\": /^([a-z]{1,15}\\s?)([a-z]{0,15}\\s?)[a-z]{0,15}$/i,\r\n    \"spacedString\": /^([a-z]{1,15}\\s?)[a-z]{0,15}$/i,\r\n    \"combi\": /^[^\\+\\*=]+$/i,\r\n    \"zip\": /^[0-9]{1,6}$/i,\r\n    \"email\": /^[a-z0-9]{1,15}[\\@]?[a-z0-9]{0,15}[\\.]?[a-z]{0,5}$/i,\r\n    \"cardNumber\": /^[0-9]{1,4}\\s?[0-9]{0,4}\\s?[0-9]{0,4}\\s?[0-9]{0,4}$/i, //will be then processed\r\n    \"cardDate\": /^[0-9]{1,4}$/i, //will be then processed\r\n    \"cardCode\": /^[0-9]{1,4}$/i\r\n};",
    "'use strict';\r\n\r\n/**@description to test the values of the input;\r\n * - it checks the type of the input from data.inputNamesObj by its name;\r\n * - it takes the regExp according to the type of the input;\r\n * - it tests the value of the input with the regExp taken;\r\n * - if the value does not meets the regExp then to insertAlarm to the input wrapper;\r\n * - as the event is \"input\", the input`s value will be tested on each char input;\r\n * if after the last input char the value doesn`t meet the regExp, then to remove the\r\n * last char and to temporary insert the alarm message, showing the sample format of\r\n * the correct mask;\r\n * @param {object} input; the input element to test the value;\r\n * @param {object} data: the initial data with funcs and variables;\r\n * */\r\nmodule.exports = (input, data) => {\r\n    let rExpType = data.inputNamesObj[input.name].type;\r\n    let regExp = data.regExpObj[rExpType];\r\n\r\n    if (!regExp.test(input.value)) {\r\n        data.init.showAlertAndOff(input.parentElement, data, \"error\");\r\n        setTimeout(() => {\r\n            input.value = input.value.slice(0,-1); //showing then deleting last char\r\n        }, 300);\r\n    } else {    //if regExp passes\r\n        defaultInput(input, data); //resetting input style\r\n\r\n        if (rExpType === \"string\"\r\n            || rExpType === \"spacedString\"\r\n            || rExpType === \"stringMaySpace\") {\r\n            input.value = input.value[0].toUpperCase() + input.value.slice(1).toLowerCase();\r\n        }\r\n        if (rExpType === \"spacedString\" || rExpType === \"stringMaySpace\") {\r\n            if (input.value.indexOf(\" \") !== -1) {  //if 'space' in string (for full name input)\r\n                let spaceInd = input.value.indexOf(\" \");\r\n                if (((input.value.length - 1) - spaceInd) >= 1 ) {   //if input has char/s after space\r\n                    let capTale = input.value[spaceInd+1].toUpperCase() + input.value.slice(spaceInd + 2).toLowerCase();\r\n                    input.value = input.value.slice(0, spaceInd+1) + capTale; //string before space and after\r\n                }\r\n            }\r\n        }\r\n        if (rExpType === \"phone\") {\r\n            //////if the place for '+'\r\n            if (input.value.indexOf(\"+\") === -1) {\r\n                input.value = \"+\" + input.value;\r\n            }\r\n            //////if the place for '('\r\n            if (input.value.indexOf(\"(\") === -1 && input.value.length === 3) {\r\n                let lastChar = input.value.slice(-1);\r\n                input.value = input.value.slice(0, -1) + \"(\" + lastChar;\r\n            }\r\n            /////if '(' is not in place\r\n            if (input.value.indexOf(\"(\") !== -1 && input.value.indexOf(\"(\") !== 2) {\r\n                data.init.insertAlarm(input.parentElement, data, \"error\");\r\n                setTimeout(() => {\r\n                    input.value = input.value.slice(0,-1); //showing then deleting last char\r\n                }, 300);\r\n            }\r\n            //////if the place for ')'\r\n            if (input.value.indexOf(\")\") === -1 && input.value.length === 7) {\r\n                let lastChar = input.value.slice(-1);\r\n                input.value = input.value.slice(0, -1) + \")\" + lastChar;\r\n            }\r\n            //if ')' is not in place\r\n            if (input.value.indexOf(\")\") !== -1 && input.value.indexOf(\")\") !== 6) {\r\n                data.init.insertAlarm(input.parentElement, data, \"error\");\r\n                setTimeout(() => {\r\n                    input.value = input.value.slice(0,-1); //showing then deleting last char\r\n                }, 300);\r\n            }\r\n\r\n            //////if the place for '-'\r\n            if (input.value.indexOf(\"-\") === -1 && input.value.length === 11 ||\r\n                input.value.indexOf(\"-\", 11) === -1 && input.value.length === 14) {\r\n                let lastChar = input.value.slice(-1);\r\n                input.value = input.value.slice(0, -1) + \"-\" + lastChar;\r\n            }\r\n            if (input.value.indexOf(\"-\") !== -1 && input.value.indexOf(\"-\") !== 10 ||\r\n                input.value.indexOf(\"-\", 11) !== -1 && input.value.indexOf(\"-\", 11) !== 13) {\r\n                data.init.insertAlarm(input.parentElement, data, \"error\");\r\n                setTimeout(() => {\r\n                    input.value = input.value.slice(0,-1); //showing then deleting last char\r\n                }, 300);\r\n            }\r\n        }\r\n        if (rExpType === \"cardNumber\") {\r\n            input.parentElement.classList.remove(\"card-type\"); //eliminating possible card-icon of previous value\r\n\r\n            if (input.value.indexOf(\" \") === -1 && input.value.length === 5 ||\r\n                input.value.indexOf(\" \", 9) === -1 && input.value.length === 10 ||\r\n                input.value.indexOf(\" \", 14) === -1 && input.value.length === 15 ||\r\n                input.value.indexOf(\" \", 19) === -1 && input.value.length === 20) {\r\n\r\n                let lastChar = input.value.slice(-1);\r\n                input.value = input.value.slice(0, -1) + \" \" + lastChar;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**@description it removes all alerts around the given input and resets to default\r\n * the styles of the input;\r\n * @param {object} input;\r\n * @param {object} data: the initial data with funcs and variables;\r\n * */\r\nfunction defaultInput(input, data) {\r\n    data.init.removeAlerts(data);\r\n    input.style.caretColor = \"\";\r\n    input.style.color = \"\";\r\n}"
  ]
}